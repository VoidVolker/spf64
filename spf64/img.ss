
MUSEROFFS=0x160 

def("LASTWORD",0x8 ,0x0 ,Qcom-0x2 )
.globl LASTWORD
LASTWORD:
 .byte 0xC3 
def("Q\054",0x2 ,0x0 ,CONSTANT-0x8 )
.globl Qcom
Qcom:
 call com+0x0 
 .byte 0xC3 
def("CONSTANT",0x8 ,0x0 ,INCLUDED-0x8 )
.globl CONSTANT
CONSTANT:
 call HEADER+0x0 
 call CONSTANTsubCODE+0x0 
 call COMPILEcom+0x0 
 call com+0x0 
 .byte 0xC3 
def("INCLUDED",0x8 ,0x0 ,DO-0x2 )
.globl INCLUDED
INCLUDED:
 call INCLUDED_+0x0 
 .byte 0xC3 
def("DO",0x2 ,0x1 ,LOOP-0x4 )
.globl DO
DO:
 call _DO+0x0 
 .byte 0xC3 
def("LOOP",0x4 ,0x1 ,ALIGNsubNOP-0x9 )
.globl LOOP
LOOP:
 call _LOOP+0x0 
 .byte 0xC3 
def("ALIGN-NOP",0x9 ,0x0 ,HIDE-0x4 )
.globl ALIGNsubNOP
ALIGNsubNOP:
 call HERE+0x0 
 call DUP+0x0 
 call ROT+0x0 
 call _2DUP+0x0 
 call MOD+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ALIGNsubNOP+0x38 -.-4
 call sub+0x0 
 call add+0x0 
 .byte 0xE9
 .int ALIGNsubNOP+0x3D -.-4
 call _2DROP+0x0 
 call OVER+0x0 
 call sub+0x0 
 call DUP+0x0 
 call ALLOT+0x0 
 call XLIT+0x0 
 .int 0x90 
 call FILL+0x0 
 .byte 0xC3 
def("HIDE",0x4 ,0x0 ,SMUDGE-0x6 )
.globl HIDE
HIDE:
 call XLIT+0x0 
 .int 0xC 
 call CsubSMUDGE+0x0 
 call Csave+0x0 
 call SMUDGE+0x0 
 .byte 0xC3 
def("SMUDGE",0x6 ,0x0 ,CsubSMUDGE-0x8 )
.globl SMUDGE
SMUDGE:
 call CsubSMUDGE+0x0 
 call Cload+0x0 
 call LAST+0x0 
 call load+0x0 
 call _1add+0x0 
 call Cload+0x0 
 call CsubSMUDGE+0x0 
 call Csave+0x0 
 call LAST+0x0 
 call load+0x0 
 call _1add+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("C-SMUDGE",0x8 ,0x0 ,HLD-0x3 )
.globl CsubSMUDGE
CsubSMUDGE:
 call _USERsubCODE+0x0 
 .int reserve+0x158 
def("HLD",0x3 ,0x0 ,SHEADER-0x7 )
.globl HLD
HLD:
 call _USERsubCODE+0x0 
 .int reserve+0x150 
def("SHEADER",0x7 ,0x0 ,rskrsk-0x2 )
.globl SHEADER
SHEADER:
 call _VECTsubCODE+0x0 
 .int YSHEADER+0x0 
 call _TOVALUEsubCODE+0x0 
def("}}",0x2 ,0x1 ,lsklsk-0x2 )
.globl rskrsk
rskrsk:
 call PREVIOUS+0x0 
 .byte 0xC3 
def("{{",0x2 ,0x1 ,endMODULE-0x7 )
.globl lsklsk
lsklsk:
 call DEPTH+0x0 
 call greatR+0x0 
 call ALSO+0x0 
 call tic+0x0 
 call EXECUTE+0x0 
 call DEPTH+0x0 
 call Rgreat+0x0 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int lsklsk+0x3D -.-4
 call CONTEXT+0x0 
 call save+0x0 
 .byte 0xC3 
def(";MODULE",0x7 ,0x0 ,EXPORT-0x6 )
.globl endMODULE
endMODULE:
 call SETsubCURRENT+0x0 
 call PREVIOUS+0x0 
 .byte 0xC3 
def("EXPORT",0x6 ,0x0 ,MODULEdcoma-0x7 )
.globl EXPORT
EXPORT:
 call DUP+0x0 
 call SETsubCURRENT+0x0 
 .byte 0xC3 
def("MODULE:",0x7 ,0x0 ,INIT-0x4 )
.globl MODULEdcoma
MODULEdcoma:
 call greatIN+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int tic+0x0 
 call CATCH+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MODULEdcoma+0x55 -.-4
 call greatIN+0x0 
 call save+0x0 
 call VOCABULARY+0x0 
 call GETsubCURRENT+0x0 
 call ALSO+0x0 
 call LATEST+0x0 
 call NAMEgreat+0x0 
 call EXECUTE+0x0 
 call DEFINITIONS+0x0 
 .byte 0xE9
 .int MODULEdcoma+0x73 -.-4
 call NIP+0x0 
 call GETsubCURRENT+0x0 
 call SWAP+0x0 
 call ALSO+0x0 
 call EXECUTE+0x0 
 call DEFINITIONS+0x0 
 .byte 0xC3 
def("INIT",0x4 ,0x0 ,MM-0x2 )
.globl INIT
INIT:
 call DBG+0x0 
 call DECIMAL+0x0 
 call lessticgreat+0x0 
 call queSLITERAL2+0x0 
 call queSLITERAL+0x9 
 call lessticgreat+0x0 
 call _QCONSTANTsubCODE+0x0 
 call CONSTANTsubCODE+0x9 
 call COMMANDLINE+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INIT+0x75 -.-4
 call lessticgreat+0x0 
 call EVALUATE+0x0 
 call CATCH+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INIT+0x70 -.-4
 call lessticgreat+0x0 
 call ERROR+0x0 
 call CATCH+0x0 
 call DROP+0x0 
 .byte 0xE9
 .int INIT+0x7F -.-4
 call DROP+0x0 
 call TITLE+0x0 
 call SPINIT+0x0 
 call lessticgreat+0x0 
 call QUIT+0x0 
 call CATCH+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INIT+0xC6 -.-4
 call CR+0x0 
 call lessticgreat+0x0 
 call ERROR+0x0 
 call CATCH+0x0 
 call DROP+0x0 
 call CR+0x0 
 .byte 0xE9
 .int INIT+0xCB -.-4
 call BYE+0x0 
 call SPINIT+0x0 
 .byte 0xEB ,0xB2 
 .byte 0xC3 
def("MM",0x2 ,0x0 ,COMMANDLINE-0xB )
.globl MM
MM:
 call _SLITERALsubCODE+0x0 
.byte 0x4 
.ascii "MM.F\000"
 .byte 0xC3 
def("COMMANDLINE",0xB ,0x0 ,RRR-0x3 )
.globl COMMANDLINE
COMMANDLINE:
 call ARG+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int COMMANDLINE+0x1F -.-4
 call ASCIIZgreat+0x0 
 .byte 0xE9
 .int COMMANDLINE+0x24 -.-4
 call DUP+0x0 
 .byte 0xC3 
def("RRR",0x3 ,0x0 ,ARG-0x3 )
.globl RRR
RRR:
 call _1add+0x0 
 call DUP+0x0 
 call DROP+0x0 
 .byte 0xC3 
def("ARG",0x3 ,0x0 ,TTF-0x3 )
.globl ARG
ARG:
 call DUP+0x0 
 call LARGV1+0x0 
 .byte 0xC3 
def("TTF",0x3 ,0x0 ,THTST-0x5 )
.globl TTF
TTF:
 call _SLITERALsubCODE+0x0 
.byte 0x8 
.ascii "spf/TT.F\000"
 .byte 0xC3 
def("THTST",0x5 ,0x0 ,SPINIT-0x6 )
.globl THTST
THTST:
 call XLIT+0x0 
 .int 0x1 
 call THROW+0x0 
 .byte 0xC3 
def("SPINIT",0x6 ,0x0 ,EMIT-0x4 )
.globl SPINIT
SPINIT:
 call S0+0x0 
 call Aload+0x0 
 call SPsave+0x0 
 .byte 0xC3 
def("EMIT",0x4 ,0x0 ,TYPE-0x4 )
.globl EMIT
EMIT:
 call _VECTsubCODE+0x0 
 .int _EMIT+0x0 
 call _TOVALUEsubCODE+0x0 
def("TYPE",0x4 ,0x0 ,ttt-0x3 )
.globl TYPE
TYPE:
 call _VECTsubCODE+0x0 
 .int TYPE1+0x0 
 call _TOVALUEsubCODE+0x0 
def("ttt",0x3 ,0x0 ,TTT-0x3 )
.globl ttt
ttt:
 call TTT+0x0 
 .byte 0xC3 
def("TTT",0x3 ,0x0 ,TSTVAR-0x6 )
.globl TTT
TTT:
 call _SLITERALsubCODE+0x0 
.byte 0x8 
.ascii "spf/TT.F\000"
 call INCLUDED_+0x0 
 .byte 0xC3 
def("TSTVAR",0x6 ,0x0 ,TITLE-0x5 )
.globl TSTVAR
TSTVAR:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("TITLE",0x5 ,0x0 ,REFILL-0x6 )
.globl TITLE
TITLE:
 call CR+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x16 
.ascii "ANS FORTH 94 for Linux\000"
 call TYPE+0x0 
 call CR+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x24 
.ascii "A.Cherezov  http://www.forth.org.ru/\000"
 call TYPE+0x0 
 call CR+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x23 
.ascii "M.Maksimov  http://www.chat.ru/~mak\000"
 call TYPE+0x0 
 call CR+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x26 
.ascii "BTC:1DXQYcg7Vr7orbqTmiEFVxEUQ9o1yAjNNN\000"
 call TYPE+0x0 
 call CR+0x0 
 call CR+0x0 
 .byte 0xC3 
def("REFILL",0x6 ,0x0 ,QUERY-0x5 )
.globl REFILL
REFILL:
 call SOURCEsubID+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int REFILL+0x2C -.-4
 call XLIT+0x0 
 .int 0x0 
 .byte 0xE9
 .int REFILL+0xBD -.-4
 call SOURCEsubID+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int REFILL+0xA5 -.-4
 call TIB+0x0 
 call CrslL+0x0 
 call SOURCEsubID+0x0 
 call READsubLINE+0x0 
 call CURSTR+0x0 
 call _1addsave+0x0 
 call THROW+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int REFILL+0x91 -.-4
 call nTIB+0x0 
 call save+0x0 
 call greatIN+0x0 
 call _0save+0x0 
 call lessPREgreat+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 .byte 0xE9
 .int REFILL+0xA0 -.-4
 call DROP+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
 .byte 0xE9
 .int REFILL+0xBD -.-4
 call QUERY+0x0 
 call greatIN+0x0 
 call _0save+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 .byte 0xC3 
def("QUERY",0x5 ,0x0 ,CONSOLEsubHANDLES-0xF )
.globl QUERY
QUERY:
 call TIB+0x0 
 call XLIT+0x0 
 .int 0x50 
 call ACCEPT+0x0 
 call nTIB+0x0 
 call save+0x0 
 .byte 0xC3 
def("CONSOLE-HANDLES",0xF ,0x0 ,lessPREgreat-0x5 )
.globl CONSOLEsubHANDLES
CONSOLEsubHANDLES:
 .byte 0xC3 
def("<PRE>",0x5 ,0x0 ,PSKIP-0x5 )
.globl lessPREgreat
lessPREgreat:
 call _VECTsubCODE+0x0 
 .int NOOP+0x0 
 call _TOVALUEsubCODE+0x0 
def("PSKIP",0x5 ,0x0 ,PARSE-0x5 )
.globl PSKIP
PSKIP:
 call DUP+0x0 
 call GetChar+0x0 
 call greatR+0x0 
 call equ+0x0 
 call Rgreat+0x0 
 call AND+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int PSKIP+0x35 -.-4
 call greatIN+0x0 
 call _1addsave+0x0 
 .byte 0xEB ,0xCB 
 call DROP+0x0 
 .byte 0xC3 
def("PARSE",0x5 ,0x0 ,PARSEsubNAME-0xA )
.globl PARSE
PARSE:
 call CharAddr+0x0 
 call greatIN+0x0 
 call load+0x0 
 call ROT+0x0 
 call SkipUpTo+0x0 
 call greatIN+0x0 
 call load+0x0 
 call sub+0x0 
 call NEGATE+0x0 
 call greatIN+0x0 
 call _1addsave+0x0 
 .byte 0xC3 
def("PARSE-NAME",0xA ,0x0 ,NextWord-0x8 )
.globl PARSEsubNAME
PARSEsubNAME:
 call PARSEsubWORD+0x0 
 .byte 0xC3 
def("NextWord",0x8 ,0x0 ,PARSEsubWORD-0xA )
.globl NextWord
NextWord:
 call PARSEsubWORD+0x0 
 .byte 0xC3 
def("PARSE-WORD",0xA ,0x0 ,UPPER_NW-0x8 )
.globl PARSEsubWORD
PARSEsubWORD:
 call SkipDelimiters+0x0 
 call ParseWord+0x0 
 call greatIN+0x0 
 call _1addsave+0x0 
 call UPPER_V+0x0 
 call load+0x0 
 call EXECUTE+0x0 
 .byte 0xC3 
def("UPPER_NW",0x8 ,0x0 ,UPPER-0x5 )
.globl UPPER_NW
UPPER_NW:
 call UPPER_SCR+0x0 
 call PLACE+0x0 
 call UPPER_SCR+0x0 
 call COUNT+0x0 
 call _2DUP+0x0 
 call UPPER+0x0 
 .byte 0xC3 
def("UPPER",0x5 ,0x0 ,UPC-0x3 )
.globl UPPER
UPPER:
 call XLIT+0x0 
 .int 0x0 
 .byte 0x48 
 .byte 0x8D ,0x6D ,0x10 
 .byte 0xBB 
 .int UPPER+0x50 
 .byte 0x3B ,0x45 ,0xF0 
//jne UPPER+0x1C 
 .byte 0x75 ,0x5 
 .byte 0x8B ,0x45 ,0xF8 
 .byte 0xFF ,0xE3 
 .byte 0x53 
 .byte 0xBB 
 .int 0x80000000 
 .byte 0x2B ,0x5D ,0xF0 
 .byte 0x53 
 .byte 0x3 ,0xD8 
 .byte 0x53 
 .byte 0x48 
 .byte 0x8B ,0x45 ,0xF8 
 call COUNT+0x0 
 call UPC+0x0 
 call OVER+0x0 
 call _1sub+0x0 
 call Csave+0x0 
 .byte 0xFF ,0x4 ,0x24 
//ÿèo UPPER+0x2D 
 .byte 0x71 ,0xE2 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 call DROP+0x0 
 .byte 0xC3 
def("UPC",0x3 ,0x0 ,UPPER_SCR-0x9 )
.globl UPC
UPC:
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x5A 
 call Ugreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int UPC+0x2C -.-4
 call XLIT+0x0 
 .int 0xDF 
 call AND+0x0 
 .byte 0xC3 
def("UPPER_SCR",0x9 ,0x0 ,ParseWord-0x9 )
.globl UPPER_SCR
UPPER_SCR:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 
def("ParseWord",0x9 ,0x0 ,SkipUpTo-0x8 )
.globl ParseWord
ParseWord:
 call CharAddr+0x0 
 call greatIN+0x0 
 call Aload+0x0 
 call SkipWord+0x0 
 call greatIN+0x0 
 call Aload+0x0 
 call sub+0x0 
 call NEGATE+0x0 
 .byte 0xC3 
def("SkipUpTo",0x8 ,0x0 ,SkipWord-0x8 )
.globl SkipUpTo
SkipUpTo:
 call DUP+0x0 
 call GetChar+0x0 
 call greatR+0x0 
 call lessgreat+0x0 
 call Rgreat+0x0 
 call AND+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SkipUpTo+0x35 -.-4
 call greatIN+0x0 
 call _1addsave+0x0 
 .byte 0xEB ,0xCB 
 call DROP+0x0 
 .byte 0xC3 
def("SkipWord",0x8 ,0x0 ,OnNotDelimiter-0xE )
.globl SkipWord
SkipWord:
 call OnNotDelimiter+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SkipWord+0x1C -.-4
 call greatIN+0x0 
 call _1addsave+0x0 
 .byte 0xEB ,0xE4 
 .byte 0xC3 
def("OnNotDelimiter",0xE ,0x0 ,SkipDelimiters-0xE )
.globl OnNotDelimiter
OnNotDelimiter:
 call GetChar+0x0 
 call SWAP+0x0 
 call IsDelimiter+0x0 
 call _0equ+0x0 
 call AND+0x0 
 .byte 0xC3 
def("SkipDelimiters",0xE ,0x0 ,OnDelimiter-0xB )
.globl SkipDelimiters
SkipDelimiters:
 call OnDelimiter+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SkipDelimiters+0x1C -.-4
 call greatIN+0x0 
 call _1addsave+0x0 
 .byte 0xEB ,0xE4 
 call greatIN+0x0 
 call Aload+0x0 
 call greatIN_WORD+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("OnDelimiter",0xB ,0x0 ,GetChar-0x7 )
.globl OnDelimiter
OnDelimiter:
 call GetChar+0x0 
 call SWAP+0x0 
 call IsDelimiter+0x0 
 call AND+0x0 
 .byte 0xC3 
def("GetChar",0x7 ,0x0 ,IsDelimiter-0xB )
.globl GetChar
GetChar:
 call EndOfChunk+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int GetChar+0x23 -.-4
 call XLIT+0x0 
 .int 0x0 
 call FALSE+0x0 
 .byte 0xE9
 .int GetChar+0x2D -.-4
 call PeekChar+0x0 
 call TRUE+0x0 
 .byte 0xC3 
def("IsDelimiter",0xB ,0x0 ,PeekChar-0x8 )
.globl IsDelimiter
IsDelimiter:
 call BL+0x0 
 call _1add+0x0 
 call less+0x0 
 .byte 0xC3 
def("PeekChar",0x8 ,0x0 ,CharAddr-0x8 )
.globl PeekChar
PeekChar:
 call CharAddr+0x0 
 call Cload+0x0 
 .byte 0xC3 
def("CharAddr",0x8 ,0x0 ,EndOfChunk-0xA )
.globl CharAddr
CharAddr:
 call SOURCE+0x0 
 call DROP+0x0 
 call greatIN+0x0 
 call Aload+0x0 
 call add+0x0 
 .byte 0xC3 
def("EndOfChunk",0xA ,0x0 ,SOURCEsave-0x7 )
.globl EndOfChunk
EndOfChunk:
 call greatIN+0x0 
 call Aload+0x0 
 call SOURCE+0x0 
 call NIP+0x0 
 call less+0x0 
 call _0equ+0x0 
 .byte 0xC3 
def("SOURCE!",0x7 ,0x0 ,SOURCE-0x6 )
.globl SOURCEsave
SOURCEsave:
 call nTIB+0x0 
 call save+0x0 
 call TIB+0x9 
 call greatIN+0x0 
 call _0save+0x0 
 .byte 0xC3 
def("SOURCE",0x6 ,0x0 ,CrslL-0x3 )
.globl SOURCE
SOURCE:
 call TIB+0x0 
 call nTIB+0x0 
 call load+0x0 
 .byte 0xC3 
def("C/L",0x3 ,0x0 ,ZZZZRR-0x6 )
.globl CrslL
CrslL:
 call _QVALUEsubCODE+0x0 
 .int 0x0 
 call _QTOVALUEsubCODE+0x0 
 .int 0x200 
 .int 0x0 
def("ZZZZRR",0x6 ,0x0 ,RECURSE-0x7 )
.globl ZZZZRR
ZZZZRR:
 call QBRANCH+0x0 
 .word 0x840F 
 .int ZZZZRR+0xB -.-4
 .byte 0xC3 
def("RECURSE",0x7 ,0x1 ,AGAIN-0x5 )
.globl RECURSE
RECURSE:
 call queCOMP+0x0 
 call LASTsubNON+0x0 
 call DUP+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int RECURSE+0x2E -.-4
 call DROP+0x0 
 call LATEST+0x0 
 call NAMEgreat+0x0 
 call _COMPILEcom+0x0 
 .byte 0xC3 
def("AGAIN",0x5 ,0x1 ,REPEAT-0x6 )
.globl AGAIN
AGAIN:
 call queCOMP+0x0 
 call XLIT+0x0 
 .int 0x3 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int AGAIN+0x2C -.-4
 call XLIT+0x0 
 .int 0xFFFFF82A 
 call THROW+0x0 
 call DUP+0x0 
 call DP+0x0 
 call Aload+0x0 
 call _2add+0x0 
 call sub+0x0 
 call DUP+0x0 
 call SHORTque+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int AGAIN+0x77 -.-4
 call XLIT+0x0 
 .int 0xEB 
 call Ccom+0x0 
 call Ccom+0x0 
 call DROP+0x0 
 .byte 0xE9
 .int AGAIN+0x81 -.-4
 call DROP+0x0 
 call BRANCHcom+0x0 
 .byte 0xC3 
def("REPEAT",0x6 ,0x1 ,WHILE-0x5 )
.globl REPEAT
REPEAT:
 call queCOMP+0x0 
 call XLIT+0x0 
 .int 0x3 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int REPEAT+0x2C -.-4
 call XLIT+0x0 
 .int 0xFFFFF82B 
 call THROW+0x0 
 call DUP+0x0 
 call DP+0x0 
 call Aload+0x0 
 call _2add+0x0 
 call sub+0x0 
 call DUP+0x0 
 call SHORTque+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int REPEAT+0x77 -.-4
 call XLIT+0x0 
 .int 0xEB 
 call Ccom+0x0 
 call Ccom+0x0 
 call DROP+0x0 
 .byte 0xE9
 .int REPEAT+0x81 -.-4
 call DROP+0x0 
 call BRANCHcom+0x0 
 call greatORESOLVE+0x0 
 .byte 0xC3 
def("WHILE",0x5 ,0x1 ,UNTIL-0x5 )
.globl WHILE
WHILE:
 call queCOMP+0x0 
 call IF+0x0 
 call _2SWAP+0x0 
 .byte 0xC3 
def("UNTIL",0x5 ,0x1 ,BEGIN-0x5 )
.globl UNTIL
UNTIL:
 call queCOMP+0x0 
 call XLIT+0x0 
 .int 0x3 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int UNTIL+0x2C -.-4
 call XLIT+0x0 
 .int 0xFFFFF82C 
 call THROW+0x0 
 call queBRANCHcom+0x0 
 call XLIT+0x0 
 .int 0xFFFFFF80 
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call sub+0x0 
 call load+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int UNTIL+0xBD -.-4
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x5 
 call sub+0x0 
 call Wload+0x0 
 call XLIT+0x0 
 .int 0x3F0 
 call add+0x0 
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x6 
 call sub+0x0 
 call Wsave+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFC 
 call ALLOT+0x0 
 .byte 0xC3 
def("BEGIN",0x5 ,0x1 ,BREAK-0x5 )
.globl BEGIN
BEGIN:
 call queCOMP+0x0 
 call XLIT+0x0 
 .int 0x4 
 call ALIGNsubNOP+0x0 
 call lessMARK+0x0 
 call XLIT+0x0 
 .int 0x3 
 .byte 0xC3 
def("BREAK",0x5 ,0x1 ,THEN-0x4 )
.globl BREAK
BREAK:
 call EXIT+0x0 
 call THEN+0x0 
 .byte 0xC3 
def("THEN",0x4 ,0x1 ,ELSE-0x4 )
.globl THEN
THEN:
 call queCOMP+0x0 
 call greatORESOLVE+0x0 
 .byte 0xC3 
def("ELSE",0x4 ,0x1 ,IF-0x2 )
.globl ELSE
ELSE:
 call queCOMP+0x0 
 call DP+0x0 
 call Aload+0x0 
 call BRANCHcom+0x0 
 call greatORESOLVE+0x0 
 call greatMARK+0x0 
 call XLIT+0x0 
 .int 0x2 
 .byte 0xC3 
def("IF",0x2 ,0x1 ,greatRESOLVE-0x8 )
.globl IF
IF:
 call queCOMP+0x0 
 call DP+0x0 
 call Aload+0x0 
 call queBRANCHcom+0x0 
 call greatMARK+0x0 
 call XLIT+0x0 
 .int 0x1 
 .byte 0xC3 
def(">RESOLVE",0x8 ,0x0 ,greatRESOLVE1-0x9 )
.globl greatRESOLVE
greatRESOLVE:
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x1 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int greatRESOLVE+0x2D -.-4
 call DROP+0x0 
 call greatRESOLVE1+0x0 
 .byte 0xE9
 .int greatRESOLVE+0x59 -.-4
 call XLIT+0x0 
 .int 0x2 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int greatRESOLVE+0x54 -.-4
 call XLIT+0x0 
 .int 0xFFFFF829 
 call THROW+0x0 
 call greatRESOLVE1+0x0 
 .byte 0xC3 
def(">RESOLVE1",0x9 ,0x0 ,greatORESOLVE-0x9 )
.globl greatRESOLVE1
greatRESOLVE1:
 call HERE+0x0 
 call OVER+0x0 
 call sub+0x0 
 call XLIT+0x0 
 .int 0x4 
 call sub+0x0 
 call SWAP+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def(">ORESOLVE",0x9 ,0x0 ,greatORESOLVE1-0xA )
.globl greatORESOLVE
greatORESOLVE:
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x1 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int greatORESOLVE+0x2D -.-4
 call DROP+0x0 
 call greatORESOLVE1+0x0 
 .byte 0xE9
 .int greatORESOLVE+0x59 -.-4
 call XLIT+0x0 
 .int 0x2 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int greatORESOLVE+0x54 -.-4
 call XLIT+0x0 
 .int 0xFFFFF829 
 call THROW+0x0 
 call greatORESOLVE1+0x0 
 .byte 0xC3 
def(">ORESOLVE1",0xA ,0x0 ,lessMARK-0x5 )
.globl greatORESOLVE1
greatORESOLVE1:
 call DP+0x0 
 call Aload+0x0 
 call OVER+0x0 
 call sub+0x0 
 call XLIT+0x0 
 .int 0x4 
 call sub+0x0 
 call SWAP+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("<MARK",0x5 ,0x0 ,greatMARK-0x5 )
.globl lessMARK
lessMARK:
 call HERE+0x0 
 .byte 0xC3 
def(">MARK",0x5 ,0x0 ,queBRANCHcom-0x8 )
.globl greatMARK
greatMARK:
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call sub+0x0 
 .byte 0xC3 
def("?BRANCH\054",0x8 ,0x0 ,CLITcom-0x5 )
.globl queBRANCHcom
queBRANCHcom:
 call lessticgreat+0x0 
 call QBRANCH+0x0 
 call _COMPILEcom+0x0 
 call XLIT+0x0 
 .int 0x84 
 call XLIT+0x0 
 .int 0xF 
 call Ccom+0x0 
 call Ccom+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queBRANCHcom+0x58 -.-4
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call sub+0x0 
 call Lcom+0x0 
 .byte 0xC3 
def("CLIT\054",0x5 ,0x0 ,SLITcom-0x5 )
.globl CLITcom
CLITcom:
 call COUNT+0x0 
 call CLITERALsubCODE+0x0 
 call COMPILEcom+0x0 
 call Sdticcom+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Ccom+0x0 
 .byte 0xC3 
def("SLIT\054",0x5 ,0x0 ,ALIGNED-0x7 )
.globl SLITcom
SLITcom:
 call SLITERALsubCODE+0x0 
 call COMPILEcom+0x0 
 call Sdticcom+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Ccom+0x0 
 .byte 0xC3 
def("ALIGNED",0x7 ,0x0 ,ALIGNsubBYTES-0xB )
.globl ALIGNED
ALIGNED:
 call ALIGNsubBYTES+0x0 
 call load+0x0 
 call DUP+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ALIGNED+0x33 -.-4
 call _1add+0x0 
 call DUP+0x0 
 call ALIGNsubBYTES+0x0 
 call save+0x0 
 call _2DUP+0x0 
 call MOD+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ALIGNED+0x5C -.-4
 call sub+0x0 
 call add+0x0 
 .byte 0xE9
 .int ALIGNED+0x61 -.-4
 call _2DROP+0x0 
 .byte 0xC3 
def("ALIGN-BYTES",0xB ,0x0 ,ALIGN-0x5 )
.globl ALIGNsubBYTES
ALIGNsubBYTES:
 call _USERsubCODE+0x0 
 .int reserve+0x148 
def("ALIGN",0x5 ,0x0 ,dticcom-0x2 )
.globl ALIGN
ALIGN:
 call DP+0x0 
 call Aload+0x0 
 call ALIGNED+0x0 
 call DP+0x0 
 call Aload+0x0 
 call sub+0x0 
 call ALLOT+0x0 
 .byte 0xC3 
def("\042\054",0x2 ,0x0 ,Sdticcom-0x3 )
.globl dticcom
dticcom:
 call COUNT+0x0 
 call Sdticcom+0x0 
 .byte 0xC3 
def("S\042\054",0x3 ,0x0 ,Scom-0x2 )
.globl Sdticcom
Sdticcom:
 call DUP+0x0 
 call Ccom+0x0 
 call Scom+0x0 
 .byte 0xC3 
def("S\054",0x2 ,0x0 ,DLITcom-0x5 )
.globl Scom
Scom:
 call DP+0x0 
 call load+0x0 
 call SWAP+0x0 
 call DUP+0x0 
 call ALLOT+0x0 
 call CMOVE+0x0 
 .byte 0xC3 
def("DLIT\054",0x5 ,0x0 ,LITcom-0x4 )
.globl DLITcom
DLITcom:
 call SWAP+0x0 
 call LITcom+0x0 
 call LITcom+0x0 
 .byte 0xC3 
def("LIT\054",0x4 ,0x0 ,RETcom-0x4 )
.globl LITcom
LITcom:
 call ticDUP_V+0x0 
 call COMPILEcom+0x0 
 call XLIT+0x0 
 .int 0x48 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xB8 
 call Ccom+0x0 
 call Qcom+0x0 
 .byte 0xC3 
def("RET\054",0x4 ,0x0 ,BRANCHcom-0x7 )
.globl RETcom
RETcom:
 call XLIT+0x0 
 .int 0xC3 
 call Ccom+0x0 
 .byte 0xC3 
def("BRANCH\054",0x7 ,0x0 ,COMPILEcom-0x8 )
.globl BRANCHcom
BRANCHcom:
 call XLIT+0x0 
 .int 0xE9 
 call Ccom+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int BRANCHcom+0x32 -.-4
 call DP+0x0 
 call Aload+0x0 
 call CELLadd+0x0 
 call sub+0x0 
 call Lcom+0x0 
 .byte 0xC3 
def("COMPILE\054",0x8 ,0x0 ,_COMPILEcom-0x9 )
.globl COMPILEcom
COMPILEcom:
 call _COMPILEcom+0x0 
 .byte 0xC3 
def("_COMPILE\054",0x9 ,0x0 ,HERE-0x4 )
.globl _COMPILEcom
_COMPILEcom:
 call XLIT+0x0 
 .int 0xE8 
 call Ccom+0x0 
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call sub+0x0 
 call Lcom+0x0 
 .byte 0xC3 
def("HERE",0x4 ,0x0 ,READsubLINE-0x9 )
.globl HERE
HERE:
 call DP+0x0 
 call Aload+0x0 
 .byte 0xC3 
def("READ-LINE",0x9 ,0x0 ,_dos-0x4 )
.globl READsubLINE
READsubLINE:
 call _dos+0x0 
 call _0save+0x0 
 call DUP+0x0 
 call greatR+0x0 
 call FILEsubPOSITION+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int READsubLINE+0x3B -.-4
 call _2DROP+0x0 
 call XLIT+0x0 
 .int 0x0 
 call XLIT+0x0 
 .int 0x0 
 call _fp1+0x0 
 call save+0x0 
 call _fp2+0x0 
 call save+0x0 
 call LTL+0x0 
 call load+0x0 
 call add+0x0 
 call OVER+0x0 
 call _addr+0x0 
 call save+0x0 
 call Rload+0x0 
 call READsubFILE+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int READsubLINE+0xA8 -.-4
 call NIP+0x0 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 call XLIT+0x0 
 .int 0x0 
 call XLIT+0x0 
 .int 0x0 
 call ROT+0x0 
 .byte 0xC3 
 call DUP+0x0 
 call greatR+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int READsubLINE+0xE6 -.-4
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 call XLIT+0x0 
 .int 0x0 
 call XLIT+0x0 
 .int 0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
 call _addr+0x0 
 call load+0x0 
 call Rload+0x0 
 call LT+0x0 
 call LTL+0x0 
 call load+0x0 
 call SEARCH+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int READsubLINE+0x199 -.-4
 call OVER+0x0 
 call _1sub+0x0 
 call Cload+0x0 
 call XLIT+0x0 
 .int 0xD 
 call equ+0x0 
 call _dos+0x0 
 call save+0x0 
 call DROP+0x0 
 call _addr+0x0 
 call load+0x0 
 call sub+0x0 
 call DUP+0x0 
 call LTL+0x0 
 call load+0x0 
 call add+0x0 
 call SgreatD+0x0 
 call _fp2+0x0 
 call load+0x0 
 call _fp1+0x0 
 call load+0x0 
 call Dadd+0x0 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 call Rgreat+0x0 
 call REPOSITIONsubFILE+0x0 
 call DROP+0x0 
 .byte 0xE9
 .int READsubLINE+0x1A7 -.-4
 call _2DROP+0x0 
 call Rgreat+0x0 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 call _dos+0x0 
 call load+0x0 
 call add+0x0 
 call XLIT+0x0 
 .int 0x0 
 call MAX+0x0 
 call TRUE+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
def("_dos",0x4 ,0x0 ,_addr-0x5 )
.globl _dos
_dos:
 call _USERsubCODE+0x0 
 .int reserve+0x140 
def("_addr",0x5 ,0x0 ,_fp2-0x4 )
.globl _addr
_addr:
 call _USERsubCODE+0x0 
 .int reserve+0x134 
def("_fp2",0x4 ,0x0 ,_fp1-0x4 )
.globl _fp2
_fp2:
 call _USERsubCODE+0x0 
 .int reserve+0x12C 
def("_fp1",0x4 ,0x0 ,UNIXsubLINES-0xA )
.globl _fp1
_fp1:
 call _USERsubCODE+0x0 
 .int reserve+0x124 
def("UNIX-LINES",0xA ,0x0 ,DOSsubLINES-0x9 )
.globl UNIXsubLINES
UNIXsubLINES:
 call XLIT+0x0 
 .int 0xA0A 
 call LT+0x0 
 call Wsave+0x0 
 call XLIT+0x0 
 .int 0x1 
 call LTL+0x0 
 call save+0x0 
 .byte 0xC3 
def("DOS-LINES",0x9 ,0x0 ,LTL-0x3 )
.globl DOSsubLINES
DOSsubLINES:
 call XLIT+0x0 
 .int 0xA0D 
 call LT+0x0 
 call Wsave+0x0 
 call XLIT+0x0 
 .int 0x2 
 call LTL+0x0 
 call save+0x0 
 .byte 0xC3 
def("LTL",0x3 ,0x0 ,LT-0x2 )
.globl LTL
LTL:
 call _CREATEsubCODE+0x0 
 .int 0x1 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("LT",0x2 ,0x0 ,lpNumberOfBytesRead-0x13 )
.globl LT
LT:
 call _CREATEsubCODE+0x0 
 .int 0xA0A0A0A 
def("lpNumberOfBytesRead",0x13 ,0x0 ,CREATEsubFILE-0xB )
.globl lpNumberOfBytesRead
lpNumberOfBytesRead:
 call _USERsubCODE+0x0 
 .int reserve+0x11C 
def("CREATE-FILE",0xB ,0x0 ,OPENsubFILE-0x9 )
.globl CREATEsubFILE
CREATEsubFILE:
 call DUP+0x0 
 call O_CREATGet+0x0 
 call OR+0x0 
 call OPENsubFILE+0x0 
 .byte 0xC3 
def("OPEN-FILE",0x9 ,0x0 ,ZslTOrsl-0x5 )
.globl OPENsubFILE
OPENsubFILE:
 call greatR+0x0 
 call FILEsubBUFF+0x0 
 call ASCIIsubZ+0x0 
 call ZslTOrsl+0x0 
 call Rgreat+0x0 
 call ZOPENsubFILE+0x0 
 .byte 0xC3 
def("Z\134TO/",0x5 ,0x0 ,DELETEsubFILE-0xB )
.globl ZslTOrsl
ZslTOrsl:
 call DUP+0x0 
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call COUNT+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ZslTOrsl+0x50 -.-4
 call XLIT+0x0 
 .int 0x5C 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ZslTOrsl+0x4E -.-4
 call XLIT+0x0 
 .int 0x2F 
 call OVER+0x0 
 call _1sub+0x0 
 call Csave+0x0 
 .byte 0xEB ,0xB8 
 call _2DROP+0x0 
 .byte 0xC3 
def("DELETE-FILE",0xB ,0x0 ,SA-0x2 )
.globl DELETEsubFILE
DELETEsubFILE:
 call TRUE+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x4 
.ascii "$$$$\000"
 call cABORTdticcend+0x0 
 .byte 0xC3 
def("SA",0x2 ,0x0 ,FILEsubBUFF-0x9 )
.globl SA
SA:
 call _CREATEsubCODE+0x0 
 .int 0xC 
 .byte 0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x1 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 
def("FILE-BUFF",0x9 ,0x0 ,KEYque-0x4 )
.globl FILEsubBUFF
FILEsubBUFF:
 call _USERsubCODE+0x0 
 .int reserve+0x18 
def("KEY?",0x4 ,0x0 ,KKEYque-0x5 )
.globl KEYque
KEYque:
 call _VECTsubCODE+0x0 
 .int KKEYque+0x0 
 call _TOVALUEsubCODE+0x0 
def("KKEY?",0x5 ,0x0 ,KEY-0x3 )
.globl KKEYque
KKEYque:
 call DUP+0x0 
 call C_KEYQUERY+0x0 
 .byte 0xC3 
def("KEY",0x3 ,0x0 ,KKEY-0x4 )
.globl KEY
KEY:
 call _VECTsubCODE+0x0 
 .int KKEY+0x0 
 call _TOVALUEsubCODE+0x0 
def("KKEY",0x4 ,0x0 ,SPACES-0x6 )
.globl KKEY
KKEY:
 call DUP+0x0 
 call C_KEY+0x0 
 .byte 0xC3 
def("SPACES",0x6 ,0x0 ,SPACE-0x5 )
.globl SPACES
SPACES:
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SPACES+0x24 -.-4
 call BL+0x0 
 call EMIT+0x0 
 call _1sub+0x0 
 .byte 0xEB ,0xDF 
 call DROP+0x0 
 .byte 0xC3 
def("SPACE",0x5 ,0x0 ,BL-0x2 )
.globl SPACE
SPACE:
 call BL+0x0 
 call EMIT+0x0 
 .byte 0xC3 
def("BL",0x2 ,0x0 ,_EMIT-0x5 )
.globl BL
BL:
 call _QVALUEsubCODE+0x0 
 .int 0x0 
 call _QTOVALUEsubCODE+0x0 
 .int 0x20 
 .int 0x0 
def("_EMIT",0x5 ,0x0 ,EMITVAR-0x7 )
.globl _EMIT
_EMIT:
 call EMITVAR+0x0 
 call Lsave+0x0 
 call EMITVAR+0x0 
 call XLIT+0x0 
 .int 0x1 
 call TYPE1+0x0 
 .byte 0xC3 
def("EMITVAR",0x7 ,0x0 ,CR-0x2 )
.globl EMITVAR
EMITVAR:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("CR",0x2 ,0x0 ,_CR-0x3 )
.globl CR
CR:
 call _VECTsubCODE+0x0 
 .int _CR+0x0 
 call _TOVALUEsubCODE+0x0 
def("_CR",0x3 ,0x0 ,WXTYPE-0x6 )
.globl _CR
_CR:
 call LT+0x0 
 call LTL+0x0 
 call load+0x0 
 call TYPE+0x0 
 .byte 0xC3 
def("WXTYPE",0x6 ,0x0 ,WXZTYPEsubBUFF-0xC )
.globl WXTYPE
WXTYPE:
 call WXZTYPEsubBUFF+0x0 
 call ASCIIsubZ+0x0 
 call ZTYPE+0x0 
 .byte 0xC3 
def("WXZTYPE-BUFF",0xC ,0x0 ,TYPE1-0x5 )
.globl WXZTYPEsubBUFF
WXZTYPEsubBUFF:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 
def("TYPE1",0x5 ,0x0 ,ACCEPT-0x6 )
.globl TYPE1
TYPE1:
 call HsubSTDOUT+0x0 
 call WRITEsubFILE+0x0 
 call DROP+0x0 
 .byte 0xC3 
def("ACCEPT",0x6 ,0x0 ,ACCEPT2-0x7 )
.globl ACCEPT
ACCEPT:
 call _VECTsubCODE+0x0 
 .int ACCEPT1+0x0 
 call _TOVALUEsubCODE+0x0 
def("ACCEPT2",0x7 ,0x0 ,ACCEPT2_-0x8 )
.globl ACCEPT2
ACCEPT2:
 call ACCEPT2_+0x0 
 call ACC_END+0x0 
 call NIP+0x0 
 call OVER+0x0 
 call sub+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACCEPT2+0x38 -.-4
 call _2DUP+0x0 
 call LAST_STP+0x0 
 call dolsave+0x0 
 call NIP+0x0 
 call CR+0x0 
 .byte 0xC3 
def("ACCEPT2_",0x8 ,0x0 ,DO1B-0x4 )
.globl ACCEPT2_
ACCEPT2_:
 call ATsubXYque+0x0 
 call NIP+0x0 
 call XLIT+0x0 
 .int 0x50 
 call sub+0x0 
 call NEGATE+0x0 
 call UMIN+0x0 
 call _2DUP+0x0 
 call BLANK+0x0 
 call OVER+0x0 
 call add+0x0 
 call _1sub+0x0 
 call OVER+0x0 
 .byte 0x90 
 call KEY+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call equ+0x0 
 call OVER+0x0 
 call XLIT+0x0 
 .int 0xD 
 call equ+0x0 
 call OR+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACCEPT2_+0x108 -.-4
 call XLIT+0x0 
 .int 0x1B 
 call OVER+0x0 
 call equ+0x0 
 .byte 0xB ,0xC0 
 .byte 0x8B ,0x45 ,0x0 
 .byte 0x8D ,0x6D ,0x4 
 .word 0x840F 
 .int ACCEPT2_+0xB1 -.-4
 call DROP+0x0 
 call DO1B+0x0 
 .byte 0xE9
 .int ACCEPT2_+0xF9 -.-4
 call XLIT+0x0 
 .int 0x8 
 call OVER+0x0 
 call equ+0x0 
 .byte 0xB ,0xC0 
 .byte 0x8B ,0x45 ,0x0 
 .byte 0x8D ,0x6D ,0x4 
 .word 0x840F 
 .int ACCEPT2_+0xE6 -.-4
 call DROP+0x0 
 call ACC_LEFT+0x0 
 call ACC_DELETE+0x0 
 .byte 0xE9
 .int ACCEPT2_+0xF9 -.-4
 call ACC_EMIT+0x0 
 call XLIT+0x0 
 .int 0x0 
 call DROP+0x0 
 call OVER+0x0 
 call UMIN+0x0 
 .byte 0xE9
 .int ACCEPT2_+0x41 -.-4
 call DROP+0x0 
 .byte 0xC3 
def("DO1B",0x4 ,0x0 ,LAST_STP-0x8 )
.globl DO1B
DO1B:
 call KEYque+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DO1B+0x16 -.-4
 .byte 0xC3 
 call KEY+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x5B 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DO1B+0x3F -.-4
 call ACC_EMIT+0x0 
 .byte 0xC3 
 call KEYque+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DO1B+0x5A -.-4
 call ACC_EMIT+0x0 
 .byte 0xC3 
 call DROP+0x0 
 call KEY+0x0 
 call XLIT+0x0 
 .int 0x44 
 call OVER+0x0 
 call equ+0x0 
 .byte 0xB ,0xC0 
 .byte 0x8B ,0x45 ,0x0 
 .byte 0x8D ,0x6D ,0x4 
 .word 0x840F 
 .int DO1B+0x94 -.-4
 call DROP+0x0 
 call ACC_LEFT+0x0 
 .byte 0xE9
 .int DO1B+0x2A8 -.-4
 call XLIT+0x0 
 .int 0x43 
 call OVER+0x0 
 call equ+0x0 
 .byte 0xB ,0xC0 
 .byte 0x8B ,0x45 ,0x0 
 .byte 0x8D ,0x6D ,0x4 
 .word 0x840F 
 .int DO1B+0xE0 -.-4
 call DROP+0x0 
 call XLIT+0x0 
 .int 0x1B 
 call EMIT+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x2 
.ascii "[C\000"
 call TYPE+0x0 
 call _1add+0x0 
 .byte 0xE9
 .int DO1B+0x2A8 -.-4
 call XLIT+0x0 
 .int 0x41 
 call OVER+0x0 
 call equ+0x0 
 .byte 0xB ,0xC0 
 .byte 0x8B ,0x45 ,0x0 
 .byte 0x8D ,0x6D ,0x4 
 .word 0x840F 
 .int DO1B+0x165 -.-4
 call DROP+0x0 
 call ACC_HOME+0x0 
 call DROP+0x0 
 call greatR+0x0 
 call LAST_STP+0x0 
 call COUNT+0x0 
 call _2DUP+0x0 
 call TYPE+0x0 
 call greatR+0x0 
 call OVER+0x0 
 call Rgreat+0x0 
 call Rload+0x0 
 call UMIN+0x0 
 call CMOVE+0x0 
 call Rgreat+0x0 
 call OVER+0x0 
 call LAST_STP+0x0 
 call Cload+0x0 
 call add+0x0 
 .byte 0xE9
 .int DO1B+0x2A8 -.-4
 call XLIT+0x0 
 .int 0x31 
 call OVER+0x0 
 call equ+0x0 
 .byte 0xB ,0xC0 
 .byte 0x8B ,0x45 ,0x0 
 .byte 0x8D ,0x6D ,0x4 
 .word 0x840F 
 .int DO1B+0x1D9 -.-4
 call DROP+0x0 
 call ACC_HOME+0x0 
 call KEYque+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DO1B+0x1A6 -.-4
 .byte 0xC3 
 call KEY+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x7E 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DO1B+0x1CF -.-4
 call ACC_EMIT+0x0 
 .byte 0xC3 
 call DROP+0x0 
 .byte 0xE9
 .int DO1B+0x2A8 -.-4
 call XLIT+0x0 
 .int 0x33 
 call OVER+0x0 
 call equ+0x0 
 .byte 0xB ,0xC0 
 .byte 0x8B ,0x45 ,0x0 
 .byte 0x8D ,0x6D ,0x4 
 .word 0x840F 
 .int DO1B+0x209 -.-4
 call DROP+0x0 
 call ACC_DELETE+0x0 
 .byte 0xE9
 .int DO1B+0x2A8 -.-4
 call XLIT+0x0 
 .int 0x34 
 call OVER+0x0 
 call equ+0x0 
 .byte 0xB ,0xC0 
 .byte 0x8B ,0x45 ,0x0 
 .byte 0x8D ,0x6D ,0x4 
 .word 0x840F 
 .int DO1B+0x27D -.-4
 call DROP+0x0 
 call ACC_END+0x0 
 call KEYque+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DO1B+0x24A -.-4
 .byte 0xC3 
 call KEY+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x7E 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DO1B+0x273 -.-4
 call ACC_EMIT+0x0 
 .byte 0xC3 
 call DROP+0x0 
 .byte 0xE9
 .int DO1B+0x2A8 -.-4
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x5B 
 call ACC_EMIT+0x0 
 call Rgreat+0x0 
 call ACC_EMIT+0x0 
 call XLIT+0x0 
 .int 0x0 
 call DROP+0x0 
 .byte 0xC3 
def("LAST_STP",0x8 ,0x0 ,ACC_END-0x7 )
.globl LAST_STP
LAST_STP:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 
def("ACC_END",0x7 ,0x0 ,ACC_HOME-0x8 )
.globl ACC_END
ACC_END:
 call greatR+0x0 
 call DUP+0x0 
 call greatR+0x0 
 call _1sub+0x0 
 call _2DUP+0x0 
 call Ugreat+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACC_END+0x47 -.-4
 call DUP+0x0 
 call Cload+0x0 
 call BL+0x0 
 call lessgreat+0x0 
 .byte 0xE9
 .int ACC_END+0x4C -.-4
 call TRUE+0x0 
 call QBRANCH+0x0 
//je  ACC_END+0xF 
 .byte 0x74 ,0xBC 
 call _1add+0x0 
 call Rgreat+0x0 
 call SWAP+0x0 
 call DUP+0x0 
 call Rgreat+0x0 
 call sub+0x0 
 call DUP+0x0 
 call _0less+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACC_END+0xD5 -.-4
 call ABS+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0x48 
 .byte 0x8D ,0x6D ,0x10 
 .byte 0xBB 
 .int ACC_END+0xD0 
 .byte 0x3B ,0x45 ,0xF0 
//jne ACC_END+0xA7 
 .byte 0x75 ,0x5 
 .byte 0x8B ,0x45 ,0xF8 
 .byte 0xFF ,0xE3 
 .byte 0x53 
 .byte 0xBB 
 .int 0x80000000 
 .byte 0x2B ,0x5D ,0xF0 
 .byte 0x53 
 .byte 0x3 ,0xD8 
 .byte 0x53 
 .byte 0x48 
 .byte 0x8B ,0x45 ,0xF8 
 call XLIT+0x0 
 .int 0x8 
 call EMIT+0x0 
 .byte 0xFF ,0x4 ,0x24 
//ÿèo ACC_END+0xB8 
 .byte 0x71 ,0xED 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 .byte 0xE9
 .int ACC_END+0x128 -.-4
 call XLIT+0x0 
 .int 0x0 
 .byte 0x48 
 .byte 0x8D ,0x6D ,0x10 
 .byte 0xBB 
 .int ACC_END+0x128 
 .byte 0x3B ,0x45 ,0xF0 
//jne ACC_END+0xF1 
 .byte 0x75 ,0x5 
 .byte 0x8B ,0x45 ,0xF8 
 .byte 0xFF ,0xE3 
 .byte 0x53 
 .byte 0xBB 
 .int 0x80000000 
 .byte 0x2B ,0x5D ,0xF0 
 .byte 0x53 
 .byte 0x3 ,0xD8 
 .byte 0x53 
 .byte 0x48 
 .byte 0x8B ,0x45 ,0xF8 
 call XLIT+0x0 
 .int 0x1B 
 call EMIT+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x2 
.ascii "[C\000"
 call TYPE+0x0 
 .byte 0xFF ,0x4 ,0x24 
//ÿèo ACC_END+0x102 
 .byte 0x71 ,0xDF 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 .byte 0xC3 
def("ACC_HOME",0x8 ,0x0 ,ACC_LEFT-0x8 )
.globl ACC_HOME
ACC_HOME:
 call SWAP+0x0 
 call greatR+0x0 
 call OVER+0x0 
 call sub+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0x48 
 .byte 0x8D ,0x6D ,0x10 
 .byte 0xBB 
 .int ACC_HOME+0x59 
 .byte 0x3B ,0x45 ,0xF0 
//jne ACC_HOME+0x30 
 .byte 0x75 ,0x5 
 .byte 0x8B ,0x45 ,0xF8 
 .byte 0xFF ,0xE3 
 .byte 0x53 
 .byte 0xBB 
 .int 0x80000000 
 .byte 0x2B ,0x5D ,0xF0 
 .byte 0x53 
 .byte 0x3 ,0xD8 
 .byte 0x53 
 .byte 0x48 
 .byte 0x8B ,0x45 ,0xF8 
 call XLIT+0x0 
 .int 0x8 
 call EMIT+0x0 
 .byte 0xFF ,0x4 ,0x24 
//ÿèo ACC_HOME+0x41 
 .byte 0x71 ,0xED 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 call Rgreat+0x0 
 call OVER+0x0 
 .byte 0xC3 
def("ACC_LEFT",0x8 ,0x0 ,ACC_EMIT-0x8 )
.globl ACC_LEFT
ACC_LEFT:
 call XLIT+0x0 
 .int 0x8 
 call EMIT+0x0 
 call _1sub+0x0 
 call greatR+0x0 
 call OVER+0x0 
 call Rgreat+0x0 
 call UMAX+0x0 
 .byte 0xC3 
def("ACC_EMIT",0x8 ,0x0 ,ACC_DELETE-0xA )
.globl ACC_EMIT
ACC_EMIT:
 call greatR+0x0 
 call ACC_INSERT+0x0 
 call Rload+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call OVER+0x0 
 call Csave+0x0 
 call _1add+0x0 
 .byte 0xC3 
def("ACC_DELETE",0xA ,0x0 ,ACC_INSERT-0xA )
.globl ACC_DELETE
ACC_DELETE:
 call _2DUP+0x0 
 call Ugreat+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACC_DELETE+0x1B -.-4
 .byte 0xC3 
 call ATsubXYque+0x0 
 call _2greatR+0x0 
 call _2DUP+0x0 
 call sub+0x0 
 call greatR+0x0 
 call DUP+0x0 
 call _1add+0x0 
 call OVER+0x0 
 call Rload+0x0 
 call MOVE+0x0 
 call DUP+0x0 
 call Rgreat+0x0 
 call _1add+0x0 
 call TYPE+0x0 
 call _2Rgreat+0x0 
 call ATsubXY+0x0 
 .byte 0xC3 
def("ACC_INSERT",0xA ,0x0 ,ATsubXYque-0x6 )
.globl ACC_INSERT
ACC_INSERT:
 call _2DUP+0x0 
 call Ugreat+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACC_INSERT+0x1B -.-4
 .byte 0xC3 
 call ATsubXYque+0x0 
 call _2greatR+0x0 
 call _2DUP+0x0 
 call sub+0x0 
 call greatR+0x0 
 call DUP+0x0 
 call DUP+0x0 
 call _1add+0x0 
 call Rload+0x0 
 call MOVE+0x0 
 call DUP+0x0 
 call Rgreat+0x0 
 call _1add+0x0 
 call TYPE+0x0 
 call _2Rgreat+0x0 
 call ATsubXY+0x0 
 .byte 0xC3 
def("AT-XY?",0x6 ,0x0 ,READsubCDNUMBER-0xD )
.globl ATsubXYque
ATsubXYque:
 call ANSI_ESCAPE+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x2 
.ascii "6n\000"
 call TYPE+0x0 
 call KEY+0x0 
 call DROP+0x0 
 call KEY+0x0 
 call DROP+0x0 
 call XLIT+0x0 
 .int 0x3B 
 call READsubCDNUMBER+0x0 
 call XLIT+0x0 
 .int 0x52 
 call READsubCDNUMBER+0x0 
 call _2sub+0x0 
 call SWAP+0x0 
 .byte 0xC3 
def("READ-CDNUMBER",0xD ,0x0 ,ATsubXY-0x5 )
.globl READsubCDNUMBER
READsubCDNUMBER:
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x0 
 call KEY+0x0 
 call DUP+0x0 
 call Rload+0x0 
 call sub+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int READsubCDNUMBER+0x5A -.-4
 call SWAP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call mul+0x0 
 call SWAP+0x0 
 call XLIT+0x0 
 .int 0x30 
 call sub+0x0 
 call add+0x0 
 .byte 0xEB ,0xB4 
 call Rgreat+0x0 
 call _2DROP+0x0 
 .byte 0xC3 
def("AT-XY",0x5 ,0x0 ,ANSI_ESCAPE-0xB )
.globl ATsubXY
ATsubXY:
 call BASE+0x0 
 call Aload+0x0 
 call greatR+0x0 
 call DECIMAL+0x0 
 call ANSI_ESCAPE+0x0 
 call SWAP+0x0 
 call _1add+0x0 
 call SWAP+0x0 
 call XLIT+0x0 
 .int 0x0 
 call dotR+0x0 
 call XLIT+0x0 
 .int 0x3B 
 call EMIT+0x0 
 call _1add+0x0 
 call XLIT+0x0 
 .int 0x0 
 call dotR+0x0 
 call XLIT+0x0 
 .int 0x48 
 call EMIT+0x0 
 call Rgreat+0x0 
 call BASE+0x0 
 call save+0x0 
 .byte 0xC3 
def("ANSI_ESCAPE",0xB ,0x0 ,ACCEPT0-0x7 )
.globl ANSI_ESCAPE
ANSI_ESCAPE:
 call XLIT+0x0 
 .int 0x1B 
 call EMIT+0x0 
 call XLIT+0x0 
 .int 0x5B 
 call EMIT+0x0 
 .byte 0xC3 
def("ACCEPT0",0x7 ,0x0 ,greatNUMBER-0x7 )
.globl ACCEPT0
ACCEPT0:
 call OVER+0x0 
 call add+0x0 
 call _1sub+0x0 
 call OVER+0x0 
 call KEY+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call equ+0x0 
 call OVER+0x0 
 call XLIT+0x0 
 .int 0xD 
 call equ+0x0 
 call OR+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACCEPT0+0x190 -.-4
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x1B 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACCEPT0+0x8B -.-4
 call DROP+0x0 
 call DUP+0x0 
 call Cload+0x0 
 call EMIT+0x0 
 .byte 0xE9
 .int ACCEPT0+0x17C -.-4
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x8 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACCEPT0+0xE9 -.-4
 call EMIT+0x0 
 call BL+0x0 
 call EMIT+0x0 
 call XLIT+0x0 
 .int 0x8 
 call EMIT+0x0 
 call _2sub+0x0 
 call greatR+0x0 
 call OVER+0x0 
 call _1sub+0x0 
 call Rgreat+0x0 
 call UMAX+0x0 
 .byte 0xE9
 .int ACCEPT0+0x17C -.-4
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x9 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ACCEPT0+0x168 -.-4
 call DROP+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x8 
 call BLANK+0x0 
 call greatR+0x0 
 call OVER+0x0 
 call Rgreat+0x0 
 call SWAP+0x0 
 call OVER+0x0 
 call sub+0x0 
 call XLIT+0x0 
 .int 0x8 
 call rsl+0x0 
 call _1add+0x0 
 call XLIT+0x0 
 .int 0x8 
 call mul+0x0 
 call add+0x0 
 .byte 0xE9
 .int ACCEPT0+0x17C -.-4
 call DUP+0x0 
 call EMIT+0x0 
 call OVER+0x0 
 call Csave+0x0 
 call _1add+0x0 
 call OVER+0x0 
 call UMIN+0x0 
 .byte 0xE9
 .int ACCEPT0+0x14 -.-4
 call DROP+0x0 
 call NIP+0x0 
 call sub+0x0 
 call NEGATE+0x0 
 .byte 0xC3 
def(">NUMBER",0x7 ,0x0 ,DIGIT-0x5 )
.globl greatNUMBER
greatNUMBER:
 .byte 0x90 
 .byte 0x90 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int greatNUMBER+0x9B -.-4
 call greatR+0x0 
 call DUP+0x0 
 call greatR+0x0 
 call Cload+0x0 
 call BASE+0x0 
 call load+0x0 
 call DIGIT+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int greatNUMBER+0x50 -.-4
 call Rgreat+0x0 
 call Rgreat+0x0 
 .byte 0xC3 
 call SWAP+0x0 
 call BASE+0x0 
 call load+0x0 
 call UMmul+0x0 
 call DROP+0x0 
 call ROT+0x0 
 call BASE+0x0 
 call load+0x0 
 call UMmul+0x0 
 call Dadd+0x0 
 call Rgreat+0x0 
 call _1add+0x0 
 call Rgreat+0x0 
 call _1sub+0x0 
 .byte 0xE9
 .int greatNUMBER+0x2 -.-4
 call DBG+0x0 
 .byte 0xC3 
def("DIGIT",0x5 ,0x0 ,cdotdticcend-0x4 )
.globl DIGIT
DIGIT:
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x30 
 call sub+0x0 
 call XLIT+0x0 
 .int 0xA 
 call OVER+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DIGIT+0xE7 -.-4
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x41 
 call XLIT+0x0 
 .int 0x30 
 call sub+0x0 
 call less+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DIGIT+0x70 -.-4
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 call DROP+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x61 
 call XLIT+0x0 
 .int 0x30 
 call sub+0x0 
 call _1sub+0x0 
 call great+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DIGIT+0xBD -.-4
 call XLIT+0x0 
 .int 0x61 
 call XLIT+0x0 
 .int 0x41 
 call sub+0x0 
 call sub+0x0 
 call XLIT+0x0 
 .int 0x41 
 call XLIT+0x0 
 .int 0x30 
 call sub+0x0 
 call XLIT+0x0 
 .int 0xA 
 call sub+0x0 
 call sub+0x0 
 call Rgreat+0x0 
 call OVER+0x0 
 call Ugreat+0x0 
 call DUP+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DIGIT+0x110 -.-4
 call NIP+0x0 
 .byte 0xC3 
def("(.\042)",0x4 ,0x0 ,DUMP-0x4 )
.globl cdotdticcend
cdotdticcend:
 call COUNT+0x0 
 call TYPE+0x0 
 .byte 0xC3 
def("DUMP",0x4 ,0x0 ,PTYPE-0x5 )
.globl DUMP
DUMP:
 call DUP+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DUMP+0x1B -.-4
 call _2DROP+0x0 
 .byte 0xC3 
 call BASE+0x0 
 call Aload+0x0 
 call greatR+0x0 
 call HEX+0x0 
 call XLIT+0x0 
 .int 0xF 
 call add+0x0 
 call XLIT+0x0 
 .int 0x10 
 call Ursl+0x0 
 call XLIT+0x0 
 .int 0x0 
 call XDO+0x0 
 .byte 0x68 
 .int DUMP+0x11A 
 .byte 0x52 
 .byte 0x53 
 call CR+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x4 
 call dot0+0x0 
 call SPACE+0x0 
 call SPACE+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x10 
 call XLIT+0x0 
 .int 0x0 
 call XDO+0x0 
 .byte 0x68 
 .int DUMP+0xF9 
 .byte 0x52 
 .byte 0x53 
 call I+0x0 
 call XLIT+0x0 
 .int 0x3 
 call AND+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DUMP+0xCD -.-4
 call SPACE+0x0 
 call DUP+0x0 
 call Cload+0x0 
 call XLIT+0x0 
 .int 0x2 
 call dot0+0x0 
 call SPACE+0x0 
 call _1add+0x0 
 .byte 0xFF ,0x4 ,0x24 
//ÿèo DUMP+0xA5 
 .byte 0x71 ,0xB1 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 call SWAP+0x0 
 call XLIT+0x0 
 .int 0x10 
 call PTYPE+0x0 
 .byte 0xFF ,0x4 ,0x24 
 .word 0x810F 
 .int DUMP+0x60 -.-4
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 call DROP+0x0 
 call Rgreat+0x0 
 call BASE+0x0 
 call save+0x0 
 .byte 0xC3 
def("PTYPE",0x5 ,0x0 ,greatPRT-0x4 )
.globl PTYPE
PTYPE:
 .byte 0x90 
 call DUP+0x0 
 call _0great+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int PTYPE+0x36 -.-4
 call _1sub+0x0 
 call SWAP+0x0 
 call COUNT+0x0 
 call greatPRT+0x0 
 call EMIT+0x0 
 call SWAP+0x0 
 .byte 0xEB ,0xCB 
 call _2DROP+0x0 
 .byte 0xC3 
def(">PRT",0x4 ,0x0 ,dot0-0x2 )
.globl greatPRT
greatPRT:
 call DUP+0x0 
 call BL+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int greatPRT+0x28 -.-4
 call DROP+0x0 
 call XLIT+0x0 
 .int 0x2E 
 .byte 0xC3 
def(".0",0x2 ,0x0 ,Hdot-0x2 )
.globl dot0
dot0:
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x0 
 call lessn+0x0 
 call nS+0x0 
 call ngreat+0x0 
 call Rgreat+0x0 
 call OVER+0x0 
 call sub+0x0 
 call XLIT+0x0 
 .int 0x0 
 call MAX+0x0 
 .byte 0x90 
 .byte 0x90 
 call DUP+0x0 
 call _0great+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int dot0+0x66 -.-4
 call _1sub+0x0 
 call XLIT+0x0 
 .int 0x30 
 call EMIT+0x0 
 .byte 0xEB ,0xD6 
 call DROP+0x0 
 call TYPE+0x0 
 .byte 0xC3 
def("H.",0x2 ,0x0 ,Udot-0x2 )
.globl Hdot
Hdot:
 call BASE+0x0 
 call Aload+0x0 
 call SWAP+0x0 
 call HEX+0x0 
 call Udot+0x0 
 call BASE+0x0 
 call save+0x0 
 .byte 0xC3 
def("U.",0x2 ,0x0 ,UdotR-0x3 )
.globl Udot
Udot:
 call UgreatD+0x0 
 call Ddot+0x0 
 .byte 0xC3 
def("U.R",0x3 ,0x0 ,dotR-0x2 )
.globl UdotR
UdotR:
 call XLIT+0x0 
 .int 0x0 
 call SWAP+0x0 
 call DdotR+0x0 
 .byte 0xC3 
def(".R",0x2 ,0x0 ,DdotR-0x3 )
.globl dotR
dotR:
 call greatR+0x0 
 call SgreatD+0x0 
 call Rgreat+0x0 
 call DdotR+0x0 
 .byte 0xC3 
def("D.R",0x3 ,0x0 ,dot-0x1 )
.globl DdotR
DdotR:
 call greatR+0x0 
 call cDdotcend+0x0 
 call Rgreat+0x0 
 call OVER+0x0 
 call sub+0x0 
 call _0MAX+0x0 
 call SPACES+0x0 
 call TYPE+0x0 
 .byte 0xC3 
def(".",0x1 ,0x0 ,Ddot-0x2 )
.globl dot
dot:
 call SgreatD+0x0 
 call Ddot+0x0 
 .byte 0xC3 
def("D.",0x2 ,0x0 ,cDdotcend-0x4 )
.globl Ddot
Ddot:
 call cDdotcend+0x0 
 call TYPE+0x0 
 call SPACE+0x0 
 .byte 0xC3 
def("(D.)",0x4 ,0x0 ,SIGN-0x4 )
.globl cDdotcend
cDdotcend:
 call DUP+0x0 
 call greatR+0x0 
 call DABS+0x0 
 call lessn+0x0 
 call nS+0x0 
 call Rgreat+0x0 
 call SIGN+0x0 
 call ngreat+0x0 
 .byte 0xC3 
def("SIGN",0x4 ,0x0 ,ngreat-0x2 )
.globl SIGN
SIGN:
 call _0less+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SIGN+0x1E -.-4
 call XLIT+0x0 
 .int 0x2D 
 call HOLD+0x0 
 .byte 0xC3 
def("#>",0x2 ,0x0 ,nS-0x2 )
.globl ngreat
ngreat:
 call _2DROP+0x0 
 call HLD+0x0 
 call Aload+0x0 
 call PAD+0x0 
 call OVER+0x0 
 call sub+0x0 
 call _1sub+0x0 
 .byte 0xC3 
def("#S",0x2 ,0x0 ,n-0x1 )
.globl nS
nS:
 call n+0x0 
 call _2DUP+0x0 
 call D0equ+0x0 
 call QBRANCH+0x0 
//je  nS+0x0 
je  nS+0x0 
 .byte 0xC3 
def("#",0x1 ,0x0 ,lessn-0x2 )
.globl n
n:
 call XLIT+0x0 
 .int 0x0 
 call BASE+0x0 
 call Aload+0x0 
 call UMrslMOD+0x0 
 call greatR+0x0 
 call BASE+0x0 
 call Aload+0x0 
 call UMrslMOD+0x0 
 call SWAP+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int n+0x62 -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call HOLD+0x0 
 call Rgreat+0x0 
 .byte 0xC3 
def("<#",0x2 ,0x0 ,HOLD-0x4 )
.globl lessn
lessn:
 call PAD+0x0 
 call _1sub+0x0 
 call HLD+0x0 
 call save+0x0 
 call XLIT+0x0 
 .int 0x0 
 call PAD+0x0 
 call _1sub+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("HOLD",0x4 ,0x0 ,DECIMAL-0x7 )
.globl HOLD
HOLD:
 call HLD+0x0 
 call Aload+0x0 
 call _1sub+0x0 
 call DUP+0x0 
 call HLD+0x0 
 call save+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("DECIMAL",0x7 ,0x0 ,HEX-0x3 )
.globl DECIMAL
DECIMAL:
 call XLIT+0x0 
 .int 0xA 
 call BASE+0x0 
 call save+0x0 
 .byte 0xC3 
def("HEX",0x3 ,0x0 ,MHdot-0x3 )
.globl HEX
HEX:
 call XLIT+0x0 
 .int 0x10 
 call BASE+0x0 
 call save+0x0 
 .byte 0xC3 
def("MH.",0x3 ,0x0 ,ABORT-0x5 )
.globl MHdot
MHdot:
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0x44 -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0xA9 -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0x10E -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0x173 -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0x1D8 -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0x23D -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0x2A2 -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0x307 -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xF 
 call AND+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xA 
 call less+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MHdot+0x36C -.-4
 call XLIT+0x0 
 .int 0x7 
 call add+0x0 
 call XLIT+0x0 
 .int 0x30 
 call add+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0x4 
 call RSHIFT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call Rgreat+0x0 
 call EMIT+0x0 
 call DROP+0x0 
 .byte 0xC3 
def("ABORT",0x5 ,0x0 ,CATCH-0x5 )
.globl ABORT
ABORT:
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 call THROW+0x0 
 .byte 0xC3 
def("CATCH",0x5 ,0x0 ,lessSETsubEXCsubHANDLERgreat-0x11 )
.globl CATCH
CATCH:
 call lessSETsubEXCsubHANDLERgreat+0x0 
 call SPload+0x0 
 call greatR+0x0 
 call HANDLER+0x0 
 call load+0x0 
 call greatR+0x0 
 call RPload+0x0 
 call HANDLER+0x0 
 call save+0x0 
 call EXECUTE+0x0 
 call Rgreat+0x0 
 call HANDLER+0x0 
 call save+0x0 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
def("<SET-EXC-HANDLER>",0x11 ,0x0 ,THROW-0x5 )
.globl lessSETsubEXCsubHANDLERgreat
lessSETsubEXCsubHANDLERgreat:
 call _VECTsubCODE+0x0 
 .int NOOP+0x0 
 call _TOVALUEsubCODE+0x0 
def("THROW",0x5 ,0x0 ,FATALsubHANDLER-0xD )
.globl THROW
THROW:
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int THROW+0x66 -.-4
 call HANDLER+0x0 
 call Aload+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int THROW+0x61 -.-4
 call RPsave+0x0 
 call Rgreat+0x0 
 call HANDLER+0x0 
 call save+0x0 
 call Rgreat+0x0 
 call SWAP+0x0 
 call greatR+0x0 
 call SPsave+0x0 
 call DROP+0x0 
 call Rgreat+0x0 
 .byte 0xE9
 .int THROW+0x66 -.-4
 call FATALsubHANDLER+0x0 
 .byte 0xC3 
def("FATAL-HANDLER",0xD ,0x0 ,CFL-0x3 )
.globl FATALsubHANDLER
FATALsubHANDLER:
 call _VECTsubCODE+0x0 
 .int NOOP+0x0 
 call _TOVALUEsubCODE+0x0 
def("CFL",0x3 ,0x0 ,GETsubCURRENT-0xB )
.globl CFL
CFL:
 call _CONSTANTsubCODE+0x0 
 .int 0x5 
def("GET-CURRENT",0xB ,0x0 ,SETsubCURRENT-0xB )
.globl GETsubCURRENT
GETsubCURRENT:
 call CURRENT+0x0 
 call Aload+0x0 
 .byte 0xC3 
def("SET-CURRENT",0xB ,0x0 ,RDROP-0x5 )
.globl SETsubCURRENT
SETsubCURRENT:
 call CURRENT+0x0 
 call save+0x0 
 .byte 0xC3 
def("RDROP",0x5 ,0x1 ,Wcom-0x2 )
.globl RDROP
RDROP:
 call XLIT+0x0 
 .int 0x48 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x83 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xC4 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x8 
 call Ccom+0x0 
 .byte 0xC3 
def("W\054",0x2 ,0x0 ,Ccom-0x2 )
.globl Wcom
Wcom:
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x2 
 call ALLOT+0x0 
 call Wsave+0x0 
 .byte 0xC3 
def("C\054",0x2 ,0x0 ,Lcom-0x2 )
.globl Ccom
Ccom:
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x1 
 call CHARS+0x0 
 call ALLOT+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("L\054",0x2 ,0x0 ,ALLOT-0x5 )
.globl Lcom
Lcom:
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call ALLOT+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("ALLOT",0x5 ,0x0 ,WORDS-0x5 )
.globl ALLOT
ALLOT:
 call DP+0x0 
 call addsave+0x0 
 .byte 0xC3 
def("WORDS",0x5 ,0x0 ,NLIST-0x5 )
.globl WORDS
WORDS:
 call CONTEXT+0x0 
 call Lload+0x0 
 call NLIST+0x0 
 .byte 0xC3 
def("NLIST",0x5 ,0x0 ,queCRsubBREAK-0x9 )
.globl NLIST
NLIST:
 call Lload+0x0 
 call greatOUT+0x0 
 call _0save+0x0 
 call CR+0x0 
 call WsubCNT+0x0 
 call _0save+0x0 
 call XLIT+0x0 
 .int 0x6 
 call NNN+0x0 
 call Lsave+0x0 
 .byte 0x90 
 call queCRsubBREAK+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int NLIST+0xAB -.-4
 call WsubCNT+0x0 
 call _1addsave+0x0 
 call DUP+0x0 
 call IDdot+0x0 
 call DUP+0x0 
 call Cload+0x0 
 call greatOUT+0x0 
 call addsave+0x0 
 call XLIT+0x0 
 .int 0x8 
 call greatOUT+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x8 
 call MOD+0x0 
 call sub+0x0 
 call DUP+0x0 
 call greatOUT+0x0 
 call addsave+0x0 
 call SPACES+0x0 
 call CDR+0x0 
 .byte 0xEB ,0x87 
 call KEYque+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int NLIST+0xC5 -.-4
 call KEY+0x0 
 call DROP+0x0 
 call CR+0x0 
 call CR+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x7 
.ascii "Words: \000"
 call TYPE+0x0 
 call WsubCNT+0x0 
 call Aload+0x0 
 call Udot+0x0 
 call CR+0x0 
 .byte 0xC3 
def("?CR-BREAK",0x9 ,0x0 ,VOCsubNAMEdot-0x9 )
.globl queCRsubBREAK
queCRsubBREAK:
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queCRsubBREAK+0xE4 -.-4
 call DUP+0x0 
 call Cload+0x0 
 call greatOUT+0x0 
 call Aload+0x0 
 call add+0x0 
 call XLIT+0x0 
 .int 0x40 
 call great+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queCRsubBREAK+0xDF -.-4
 call greatOUT+0x0 
 call _0save+0x0 
 call NNN+0x0 
 call Aload+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queCRsubBREAK+0x7E -.-4
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 call NNN+0x0 
 call addsave+0x0 
 call TRUE+0x0 
 .byte 0xE9
 .int queCRsubBREAK+0xDA -.-4
 call _SLITERALsubCODE+0x0 
.byte 0x8 
.ascii "Q - quit\000"
 call TYPE+0x0 
 call CR+0x0 
 call XLIT+0x0 
 .int 0x6 
 call NNN+0x0 
 call save+0x0 
 call KEY+0x0 
 call XLIT+0x0 
 .int 0x20 
 call OR+0x0 
 call XLIT+0x0 
 .int 0x71 
 call lessgreat+0x0 
 call AND+0x0 
 call queDUP+0x0 
 call _0lessgreat+0x0 
 .byte 0xE9
 .int queCRsubBREAK+0xE4 -.-4
 call TRUE+0x0 
 .byte 0xC3 
def("VOC-NAME.",0x9 ,0x0 ,PREVIOUS-0x8 )
.globl VOCsubNAMEdot
VOCsubNAMEdot:
 call DUP+0x0 
 call FORTHsubWORDLIST+0x0 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int VOCsubNAMEdot+0x31 -.-4
 call DROP+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x5 
.ascii "FORTH\000"
 call TYPE+0x0 
 .byte 0xC3 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call Lload+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int VOCsubNAMEdot+0x68 -.-4
 call IDdot+0x0 
 call DROP+0x0 
 .byte 0xE9
 .int VOCsubNAMEdot+0x87 -.-4
 call DROP+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x9 
.ascii "<NONAME>:\000"
 call TYPE+0x0 
 call Udot+0x0 
 .byte 0xC3 
def("PREVIOUS",0x8 ,0x0 ,ALSO-0x4 )
.globl PREVIOUS
PREVIOUS:
 call CONTEXT+0x0 
 call XLIT+0x0 
 .int 0x4 
 call sub+0x0 
 call SsubO+0x0 
 call MAX+0x0 
 call CONTEXT+0x9 
 .byte 0xC3 
def("ALSO",0x4 ,0x0 ,SETsubORDER-0x9 )
.globl ALSO
ALSO:
 call GETsubORDER+0x0 
 call _1add+0x0 
 call OVER+0x0 
 call SWAP+0x0 
 call SETsubORDER+0x0 
 .byte 0xC3 
def("SET-ORDER",0x9 ,0x0 ,ORDER-0x5 )
.globl SETsubORDER
SETsubORDER:
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SETsubORDER+0xA6 -.-4
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SETsubORDER+0x39 -.-4
 call DROP+0x0 
 call ONLY+0x0 
 .byte 0xC3 
 call DUP+0x0 
 call _1sub+0x0 
 call XLIT+0x0 
 .int 0x4 
 call mul+0x0 
 call SsubO+0x0 
 call add+0x0 
 call CONTEXT+0x9 
 call XLIT+0x0 
 .int 0x0 
 call XDO+0x0 
 .byte 0x68 
 .int SETsubORDER+0xA1 
 .byte 0x52 
 .byte 0x53 
 call CONTEXT+0x0 
 call I+0x0 
 call XLIT+0x0 
 .int 0x4 
 call mul+0x0 
 call sub+0x0 
 call Lsave+0x0 
 .byte 0xFF ,0x4 ,0x24 
//ÿèo SETsubORDER+0x75 
 .byte 0x71 ,0xD9 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 .byte 0xE9
 .int SETsubORDER+0xBF -.-4
 call DROP+0x0 
 call SsubO+0x0 
 call CONTEXT+0x9 
 call CONTEXT+0x0 
 call _0save+0x0 
 .byte 0xC3 
def("ORDER",0x5 ,0x0 ,ONLY-0x4 )
.globl ORDER
ORDER:
 call GETsubORDER+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x9 
.ascii "Context: \000"
 call TYPE+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0x48 
 .byte 0x8D ,0x6D ,0x10 
 .byte 0xBB 
 .int ORDER+0x5B 
 .byte 0x3B ,0x45 ,0xF0 
//jne ORDER+0x36 
 .byte 0x75 ,0x5 
 .byte 0x8B ,0x45 ,0xF8 
 .byte 0xFF ,0xE3 
 .byte 0x53 
 .byte 0xBB 
 .int 0x80000000 
 .byte 0x2B ,0x5D ,0xF0 
 .byte 0x53 
 .byte 0x3 ,0xD8 
 .byte 0x53 
 .byte 0x48 
 .byte 0x8B ,0x45 ,0xF8 
 call VOCsubNAMEdot+0x0 
 call SPACE+0x0 
 .byte 0xFF ,0x4 ,0x24 
//ÿèo ORDER+0x47 
 .byte 0x71 ,0xF1 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 call CR+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x9 
.ascii "Current: \000"
 call TYPE+0x0 
 call GETsubCURRENT+0x0 
 call VOCsubNAMEdot+0x0 
 call CR+0x0 
 .byte 0xC3 
def("ONLY",0x4 ,0x0 ,LATEST-0x6 )
.globl ONLY
ONLY:
 call SsubO+0x0 
 call CONTEXT+0x9 
 call FORTH+0x0 
 .byte 0xC3 
def("LATEST",0x6 ,0x0 ,FORTH-0x5 )
.globl LATEST
LATEST:
 call CURRENT+0x0 
 call load+0x0 
 call load+0x0 
 .byte 0xC3 
def("FORTH",0x5 ,0x0 ,GETsubORDER-0x9 )
.globl FORTH
FORTH:
 call FORTHsubWORDLIST+0x0 
 call CONTEXT+0x0 
 call save+0x0 
 .byte 0xC3 
def("GET-ORDER",0x9 ,0x0 ,DEFINITIONS-0xB )
.globl GETsubORDER
GETsubORDER:
 call CONTEXT+0x0 
 call _1add+0x0 
 call SsubO+0x0 
 call XDO+0x0 
 .byte 0x68 
 .int GETsubORDER+0x3A 
 .byte 0x52 
 .byte 0x53 
 call I+0x0 
 call Lload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call ADDxESPycomTOS+0x0 
//ÿèo GETsubORDER+0x1B 
 .byte 0x71 ,0xE6 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 call CONTEXT+0x0 
 call SsubO+0x0 
 call sub+0x0 
 call XLIT+0x0 
 .int 0x4 
 call rsl+0x0 
 call _1add+0x0 
 .byte 0xC3 
def("DEFINITIONS",0xB ,0x0 ,FIND1-0x5 )
.globl DEFINITIONS
DEFINITIONS:
 call CONTEXT+0x0 
 call Lload+0x0 
 call SETsubCURRENT+0x0 
 .byte 0xC3 
def("FIND1",0x5 ,0x0 ,SFIND-0x5 )
.globl FIND1
FIND1:
 call COUNT+0x0 
 call SFIND+0x0 
 call DUP+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int FIND1+0x32 -.-4
 call _2DROP+0x0 
 call _1sub+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
def("SFIND",0x5 ,0x0 ,SEARCHsubWORDLIST1-0x10 )
.globl SFIND
SFIND:
 call SsubO+0x0 
 call _1sub+0x0 
 call CONTEXT+0x0 
 call XDO+0x0 
 .byte 0x68 
 .int SFIND+0x89 
 .byte 0x52 
 .byte 0x53 
 call _2DUP+0x0 
 call I+0x0 
 call Lload+0x0 
 call SEARCHsubWORDLIST1+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SFIND+0x4F -.-4
 call _2SWAP+0x0 
 call _2DROP+0x0 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 .byte 0xC3 
 call DROP+0x0 
 call I+0x0 
 call SsubO+0x0 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SFIND+0x74 -.-4
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x10 
 .byte 0xC3 
 call XLIT+0x0 
 .int 0xFFFFFFFC 
 call ADDxESPycomTOS+0x0 
//ÿèo SFIND+0x1B 
 .byte 0x71 ,0x97 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
def("SEARCH-WORDLIST1",0x10 ,0x0 ,SEARCHsubWORDLIST-0xF )
.globl SEARCHsubWORDLIST1
SEARCHsubWORDLIST1:
 call Lload+0x0 
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SEARCHsubWORDLIST1+0x9E -.-4
 call greatR+0x0 
 call _2DUP+0x0 
 call Rload+0x0 
 call COUNT+0x0 
 call COMPARE+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SEARCHsubWORDLIST1+0x81 -.-4
 call _2DROP+0x0 
 call Rload+0x0 
 call NAMEgreat+0x0 
 call Rgreat+0x0 
 call NAMEgreatF+0x0 
 call Lload+0x0 
 call XLIT+0x0 
 .int 0x1 
 call AND+0x0 
 call _1sub+0x0 
 call XLIT+0x0 
 .int 0x1 
 call OR+0x0 
 .byte 0xC3 
 call Rgreat+0x0 
 call XLIT+0x0 
 .int 0x4 
 call sub+0x0 
 call Lload+0x0 
 .byte 0xE9
 .int SEARCHsubWORDLIST1+0x8 -.-4
 call _2DROP+0x0 
 call DROP+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
def("SEARCH-WORDLIST",0xF ,0x0 ,FIND-0x4 )
.globl SEARCHsubWORDLIST
SEARCHsubWORDLIST:
 call _VECTsubCODE+0x0 
 .int SEARCHsubWORDLIST1+0x0 
 call _TOVALUEsubCODE+0x0 
def("FIND",0x4 ,0x0 ,WordByAddr-0xA )
.globl FIND
FIND:
 call _VECTsubCODE+0x0 
 .int FIND1+0x0 
 call _TOVALUEsubCODE+0x0 
def("WordByAddr",0xA ,0x0 ,NEAR_NFA-0x8 )
.globl WordByAddr
WordByAddr:
 call DUP+0x0 
 call DP+0x0 
 call Aload+0x0 
 call Ugreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int WordByAddr+0x3E -.-4
 call DROP+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x12 
.ascii "<not in the image>\000"
 .byte 0xC3 
 call NEAR_NFA+0x0 
 call DROP+0x0 
 call DUP+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int WordByAddr+0x75 -.-4
 call DROP+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0xB 
.ascii "<not found>\000"
 .byte 0xC3 
 call COUNT+0x0 
 .byte 0xC3 
def("NEAR_NFA",0x8 ,0x0 ,WL_NEAR_NFA_M-0xD )
.globl NEAR_NFA
NEAR_NFA:
 call XLIT+0x0 
 .int 0x0 
 call SWAP+0x0 
 call VOCsubLIST+0x0 
 .byte 0x90 
 call Lload+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int NEAR_NFA+0x4E -.-4
 call DUP+0x0 
 call greatR+0x0 
 call WL_NEAR_NFA_M+0x0 
 call greatR+0x0 
 call N_UMAX+0x0 
 call Rgreat+0x0 
 call Rgreat+0x0 
 .byte 0xEB ,0xC6 
 call DROP+0x0 
 .byte 0xC3 
def("WL_NEAR_NFA_M",0xD ,0x0 ,WL_NEAR_NFA_N-0xD )
.globl WL_NEAR_NFA_M
WL_NEAR_NFA_M:
 call XLIT+0x0 
 .int 0x0 
 call subROT+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call Lload+0x0 
 .byte 0x90 
 .byte 0x90 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int WL_NEAR_NFA_M+0x77 -.-4
 call WL_NEAR_NFA_N+0x0 
 call SWAP+0x0 
 call greatR+0x0 
 call DUP+0x0 
 call greatR+0x0 
 call N_UMAX+0x0 
 call Rgreat+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int WL_NEAR_NFA_M+0x6B -.-4
 call CDR+0x0 
 call Rgreat+0x0 
 call SWAP+0x0 
 .byte 0xEB ,0xAC 
 call DROP+0x0 
 .byte 0xC3 
def("WL_NEAR_NFA_N",0xD ,0x0 ,WL_NEAR_NFA-0xB )
.globl WL_NEAR_NFA_N
WL_NEAR_NFA_N:
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call _2DUP+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int WL_NEAR_NFA_N+0x1D -.-4
 call NAMEgreat+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int WL_NEAR_NFA_N+0x34 -.-4
 call CDR+0x0 
 .byte 0xEB ,0xCF 
 .byte 0xC3 
def("WL_NEAR_NFA",0xB ,0x0 ,N_UMAX-0x6 )
.globl WL_NEAR_NFA
WL_NEAR_NFA:
 call load+0x0 
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call _2DUP+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int WL_NEAR_NFA+0x22 -.-4
 call NAMEgreat+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int WL_NEAR_NFA+0x39 -.-4
 call CDR+0x0 
 .byte 0xEB ,0xCF 
 .byte 0xC3 
def("N_UMAX",0x6 ,0x0 ,queVOC-0x4 )
.globl N_UMAX
N_UMAX:
 call OVER+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int N_UMAX+0x1A -.-4
 call NAMEgreat+0x0 
 call OVER+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int N_UMAX+0x34 -.-4
 call NAMEgreat+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int N_UMAX+0x4A -.-4
 call NIP+0x0 
 .byte 0xC3 
 call DROP+0x0 
 .byte 0xC3 
def("?VOC",0x4 ,0x0 ,queIMMEDIATE-0xA )
.globl queVOC
queVOC:
 call NAMEgreatF+0x0 
 call Cload+0x0 
 call andVOC+0x0 
 call AND+0x0 
 .byte 0xC3 
def("?IMMEDIATE",0xA ,0x0 ,WORDLIST-0x8 )
.globl queIMMEDIATE
queIMMEDIATE:
 call NAMEgreatF+0x0 
 call Cload+0x0 
 call andIMMEDIATE+0x0 
 call AND+0x0 
 .byte 0xC3 
def("WORDLIST",0x8 ,0x0 ,VOC-0x3 )
.globl WORDLIST
WORDLIST:
 call HERE+0x0 
 call VOCsubLIST+0x0 
 call Aload+0x0 
 call Lcom+0x0 
 call VOCsubLIST+0x0 
 call save+0x0 
 call HERE+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 .byte 0xC3 
def("VOC",0x3 ,0x0 ,PARload-0x4 )
.globl VOC
VOC:
 call LAST+0x0 
 call Aload+0x0 
 call NAMEgreatF+0x0 
 call DUP+0x0 
 call Cload+0x0 
 call andVOC+0x0 
 call OR+0x0 
 call SWAP+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("PAR@",0x4 ,0x0 ,PARsave-0x4 )
.globl PARload
PARload:
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call load+0x0 
 .byte 0xC3 
def("PAR!",0x4 ,0x0 ,CLASSload-0x6 )
.globl PARsave
PARsave:
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("CLASS@",0x6 ,0x0 ,CLASSsave-0x6 )
.globl CLASSload
CLASSload:
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call load+0x0 
 .byte 0xC3 
def("CLASS!",0x6 ,0x0 ,IMMEDIATE-0x9 )
.globl CLASSsave
CLASSsave:
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("IMMEDIATE",0x9 ,0x0 ,addWORD-0x5 )
.globl IMMEDIATE
IMMEDIATE:
 call LAST+0x0 
 call Aload+0x0 
 call NAMEgreatF+0x0 
 call DUP+0x0 
 call Cload+0x0 
 call andIMMEDIATE+0x0 
 call OR+0x0 
 call SWAP+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("+WORD",0x5 ,0x0 ,addSWORD-0x6 )
.globl addWORD
addWORD:
 call DUP+0x0 
 call load+0x0 
 call Lcom+0x0 
 call HERE+0x0 
 call LAST+0x0 
 call save+0x0 
 call HERE+0x0 
 call SWAP+0x0 
 call Lsave+0x0 
 call dticcom+0x0 
 .byte 0xC3 
def("+SWORD",0x6 ,0x0 ,greatBODY-0x5 )
.globl addSWORD
addSWORD:
 call DUP+0x0 
 call load+0x0 
 call Lcom+0x0 
 call HERE+0x0 
 call LAST+0x0 
 call save+0x0 
 call HERE+0x0 
 call SWAP+0x0 
 call save+0x0 
 call Sdticcom+0x0 
 .byte 0xC3 
def(">BODY",0x5 ,0x0 ,andVOC-0x4 )
.globl greatBODY
greatBODY:
 call XLIT+0x0 
 .int 0x5 
 call add+0x0 
 .byte 0xC3 
def("&VOC",0x4 ,0x0 ,andIMMEDIATE-0xA )
.globl andVOC
andVOC:
 call _CONSTANTsubCODE+0x0 
 .int 0x2 
def("&IMMEDIATE",0xA ,0x0 ,IDdot-0x3 )
.globl andIMMEDIATE
andIMMEDIATE:
 call _CONSTANTsubCODE+0x0 
 .int 0x1 
def("ID.",0x3 ,0x0 ,queLITERAL2-0x9 )
.globl IDdot
IDdot:
 call COUNT+0x0 
 call TYPE+0x0 
 .byte 0xC3 
def("?LITERAL2",0x9 ,0x0 ,queSLITERAL2-0xA )
.globl queLITERAL2
queLITERAL2:
 call COUNT+0x0 
 call queSLITERAL2+0x0 
 .byte 0xC3 
def("?SLITERAL2",0xA ,0x0 ,HEXsubSLITERAL-0xC )
.globl queSLITERAL2
queSLITERAL2:
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x1 
 call great+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL2+0x6E -.-4
 call OVER+0x0 
 call Wload+0x0 
 call XLIT+0x0 
 .int 0x7830 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL2+0x6E -.-4
 call _2DUP+0x0 
 call _2greatR+0x0 
 call HEXsubSLITERAL+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL2+0x69 -.-4
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 .byte 0xC3 
 .byte 0xE9
 .int queSLITERAL2+0x6E -.-4
 call _2Rgreat+0x0 
 call _2DUP+0x0 
 call _2greatR+0x0 
 call lessticgreat+0x0 
 call queSLITERAL1+0x0 
 call CATCH+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL2+0x15B -.-4
 call _2DROP+0x0 
 call _2Rgreat+0x0 
 call OVER+0x0 
 call Cload+0x0 
 call XLIT+0x0 
 .int 0x22 
 call equ+0x0 
 call OVER+0x0 
 call XLIT+0x0 
 .int 0x2 
 call great+0x0 
 call AND+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL2+0xF4 -.-4
 call XLIT+0x0 
 .int 0x2 
 call sub+0x0 
 call SWAP+0x0 
 call _1add+0x0 
 call SWAP+0x0 
 call _2DUP+0x0 
 call add+0x0 
 call XLIT+0x0 
 .int 0x0 
 call SWAP+0x0 
 call Csave+0x0 
 call lessticgreat+0x0 
 call INCLUDED+0x0 
 call CATCH+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x2 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL2+0x151 -.-4
 call XLIT+0x0 
 .int 0xFFFFF82D 
 call THROW+0x0 
 .byte 0xE9
 .int queSLITERAL2+0x156 -.-4
 call THROW+0x0 
 .byte 0xE9
 .int queSLITERAL2+0x163 -.-4
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 .byte 0xC3 
def("HEX-SLITERAL",0xC ,0x0 ,queLITERAL1-0x9 )
.globl HEXsubSLITERAL
HEXsubSLITERAL:
 call BASE+0x0 
 call Aload+0x0 
 call greatR+0x0 
 call HEX+0x0 
 call XLIT+0x0 
 .int 0x0 
 call XLIT+0x0 
 .int 0x0 
 call _2SWAP+0x0 
 call _2sub+0x0 
 call SWAP+0x0 
 call _2add+0x0 
 call SWAP+0x0 
 call greatNUMBER+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int HEXsubSLITERAL+0xAE -.-4
 call XLIT+0x0 
 .int 0x1 
 call equ+0x0 
 call SWAP+0x0 
 call Cload+0x0 
 call XLIT+0x0 
 .int 0x4C 
 call equ+0x0 
 call AND+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int HEXsubSLITERAL+0xA9 -.-4
 call _2DROP+0x0 
 call FALSE+0x0 
 call Rgreat+0x0 
 call BASE+0x0 
 call save+0x0 
 .byte 0xC3 
 .byte 0xE9
 .int HEXsubSLITERAL+0xB3 -.-4
 call DROP+0x0 
 call DgreatS+0x0 
 call LITERAL+0x0 
 call TRUE+0x0 
 call Rgreat+0x0 
 call BASE+0x0 
 call save+0x0 
 .byte 0xC3 
def("?LITERAL1",0x9 ,0x0 ,queSLITERAL1-0xA )
.globl queLITERAL1
queLITERAL1:
 call COUNT+0x0 
 call queSLITERAL1+0x0 
 .byte 0xC3 
def("?SLITERAL1",0xA ,0x0 ,subsub-0x2 )
.globl queSLITERAL1
queSLITERAL1:
 call XLIT+0x0 
 .int 0x0 
 call XLIT+0x0 
 .int 0x0 
 call _2SWAP+0x0 
 call OVER+0x0 
 call Cload+0x0 
 call XLIT+0x0 
 .int 0x2D 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL1+0x58 -.-4
 call _1sub+0x0 
 call SWAP+0x0 
 call _1add+0x0 
 call SWAP+0x0 
 call TRUE+0x0 
 .byte 0xE9
 .int queSLITERAL1+0x5D -.-4
 call FALSE+0x0 
 call greatR+0x0 
 call greatNUMBER+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x1 
 call great+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL1+0x93 -.-4
 call XLIT+0x0 
 .int 0xFFFFF82F 
 call THROW+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL1+0xE9 -.-4
 call Cload+0x0 
 call XLIT+0x0 
 .int 0x2E 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL1+0xCA -.-4
 call XLIT+0x0 
 .int 0xFFFFF82E 
 call THROW+0x0 
 call Rgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL1+0xDF -.-4
 call DNEGATE+0x0 
 call _2LITERAL+0x0 
 .byte 0xE9
 .int queSLITERAL1+0x10D -.-4
 call DROP+0x0 
 call DgreatS+0x0 
 call Rgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSLITERAL1+0x108 -.-4
 call NEGATE+0x0 
 call LITERAL+0x0 
 .byte 0xC3 
def("--",0x2 ,0x0 ,FIELD-0x5 )
.globl subsub
subsub:
 call FIELD+0x0 
 .byte 0xC3 
def("FIELD",0x5 ,0x0 ,slEOF-0x4 )
.globl FIELD
FIELD:
 call dcoma+0x0 
 call OVER+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int FIELD+0x32 -.-4
 call DUP+0x0 
 call LITcom+0x0 
 call XLIT+0x0 
 .int 0x8063034 
 call COMPILEcom+0x0 
 call DROP+0x0 
 call end+0x0 
 call add+0x0 
 .byte 0xC3 
def("\134EOF",0x4 ,0x0 ,EXIT-0x4 )
.globl slEOF
slEOF:
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call REFILL+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
//je  slEOF+0x3 
 .byte 0x74 ,0xEF 
 call sl+0x0 
 .byte 0xC3 
def("EXIT",0x4 ,0x1 ,end-0x1 )
.globl EXIT
EXIT:
 call RETcom+0x0 
 .byte 0xC3 
def(";",0x1 ,0x1 ,xCOMPILEy-0x9 )
.globl end
end:
 call RETcom+0x0 
 call x+0x0 
 call SMUDGE+0x0 
 call XLIT+0x0 
 .int 0x0 
 call LASTsubNON+0x9 
 .byte 0xC3 
def("[COMPILE]",0x9 ,0x1 ,c-0x1 )
.globl xCOMPILEy
xCOMPILEy:
 call queCOMP+0x0 
 call tic+0x0 
 call COMPILEcom+0x0 
 .byte 0xC3 
def("(",0x1 ,0x1 ,dotc-0x2 )
.globl c
c:
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call XLIT+0x0 
 .int 0x29 
 call DUP+0x0 
 call PARSE+0x0 
 call add+0x0 
 call Cload+0x0 
 call equ+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int c+0x4D -.-4
 call REFILL+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int c+0x4B -.-4
 .byte 0xC3 
 .byte 0xEB ,0xB6 
 .byte 0xC3 
def(".(",0x2 ,0x1 ,sl-0x1 )
.globl dotc
dotc:
 call XLIT+0x0 
 .int 0x29 
 call PARSE+0x0 
 call TYPE+0x0 
 .byte 0xC3 
def("\134",0x1 ,0x1 ,POSTPONE-0x8 )
.globl sl
sl:
 call XLIT+0x0 
 .int 0x1 
 call PARSE+0x0 
 call _2DROP+0x0 
 .byte 0xC3 
def("POSTPONE",0x8 ,0x1 ,TO-0x2 )
.globl POSTPONE
POSTPONE:
 call queCOMP+0x0 
 call PARSEsubWORD+0x0 
 call SFIND+0x0 
 call DUP+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int POSTPONE+0x32 -.-4
 call XLIT+0x0 
 .int 0xFFFFFEBF 
 call THROW+0x0 
 call XLIT+0x0 
 .int 0x1 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int POSTPONE+0x55 -.-4
 call COMPILEcom+0x0 
 .byte 0xE9
 .int POSTPONE+0x69 -.-4
 call LITcom+0x0 
 call lessticgreat+0x0 
 call COMPILEcom+0x0 
 call COMPILEcom+0x0 
 .byte 0xC3 
def("TO",0x2 ,0x1 ,REQUIRE-0x7 )
.globl TO
TO:
 call tic+0x0 
 call DBG+0x0 
 call DUP+0x0 
 call _1add+0x0 
 call RELload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call Wload+0x0 
 call XLIT+0x0 
 .int 0xDB88 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int TO+0x7E -.-4
 call greatBODY+0x0 
 call STATE+0x0 
 call load+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int TO+0x78 -.-4
 call SWAP+0x0 
 call LITcom+0x0 
 call LITcom+0x0 
 call save+0x0 
 .byte 0xE9
 .int TO+0x7D -.-4
 call save+0x0 
 .byte 0xC3 
 call greatBODY+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call STATE+0x0 
 call load+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int TO+0xB0 -.-4
 call COMPILEcom+0x0 
 .byte 0xE9
 .int TO+0xB5 -.-4
 call EXECUTE+0x0 
 .byte 0xC3 
def("REQUIRE",0x7 ,0x0 ,REQUIRED-0x8 )
.globl REQUIRE
REQUIRE:
 call PARSEsubWORD+0x0 
 call PARSEsubWORD+0x0 
 call _2DUP+0x0 
 call add+0x0 
 call XLIT+0x0 
 .int 0x0 
 call SWAP+0x0 
 call Csave+0x0 
 call REQUIRED+0x0 
 .byte 0xC3 
def("REQUIRED",0x8 ,0x0 ,INCLUDED_-0x9 )
.globl REQUIRED
REQUIRED:
 call _2SWAP+0x0 
 call SFIND+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int REQUIRED+0x25 -.-4
 call DROP+0x0 
 call _2DROP+0x0 
 .byte 0xC3 
 .byte 0xE9
 .int REQUIRED+0x30 -.-4
 call _2DROP+0x0 
 call INCLUDED_+0x0 
 .byte 0xC3 
 .byte 0xC3 
def("INCLUDED_",0x9 ,0x0 ,INCLUDEsubFILE-0xC )
.globl INCLUDED_
INCLUDED_:
 call RrslO+0x0 
 call OPENsubFILE+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INCLUDED_+0x24 -.-4
 call NIP+0x0 
 call THROW+0x0 
 call DUP+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int INCLUDEsubFILE+0x0 
 call CATCH+0x0 
 call SAVEERR+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INCLUDED_+0x6A -.-4
 call Rgreat+0x0 
 call CLOSEsubFILE+0x0 
 call DROP+0x0 
 call THROW+0x0 
 .byte 0xE9
 .int INCLUDED_+0x6E -.-4
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 .byte 0xC3 
def("INCLUDE-FILE",0xC ,0x0 ,EVALUATE-0x8 )
.globl INCLUDEsubFILE
INCLUDEsubFILE:
 call TIB+0x0 
 call greatR+0x0 
 call greatIN+0x0 
 call load+0x0 
 call greatR+0x0 
 call nTIB+0x0 
 call Aload+0x0 
 call greatR+0x0 
 call SOURCEsubID+0x0 
 call greatR+0x0 
 call BLK+0x0 
 call Aload+0x0 
 call greatR+0x0 
 call CURSTR+0x0 
 call Aload+0x0 
 call greatR+0x0 
 call CrslL+0x0 
 call XLIT+0x0 
 .int 0x2 
 call add+0x0 
 call ALLOCATE+0x0 
 call THROW+0x0 
 call TIB+0x9 
 call BLK+0x0 
 call _0save+0x0 
 call SOURCEsubID+0x9 
 call CURSTR+0x0 
 call _0save+0x0 
 .byte 0x90 
 .byte 0x90 
 call REFILL+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INCLUDEsubFILE+0xA4 -.-4
 call INTERPRET+0x0 
 .byte 0xEB ,0xE9 
 call TIB+0x0 
 call FREE+0x0 
 call THROW+0x0 
 call SOURCEsubID+0x0 
 call CLOSEsubFILE+0x0 
 call THROW+0x0 
 call Rgreat+0x0 
 call CURSTR+0x0 
 call save+0x0 
 call Rgreat+0x0 
 call BLK+0x0 
 call save+0x0 
 call Rgreat+0x0 
 call SOURCEsubID+0x9 
 call Rgreat+0x0 
 call nTIB+0x0 
 call save+0x0 
 call Rgreat+0x0 
 call greatIN+0x0 
 call save+0x0 
 call Rgreat+0x0 
 call TIB+0x9 
 .byte 0xC3 
def("EVALUATE",0x8 ,0x0 ,RESTOREsubSOURCE-0xE )
.globl EVALUATE
EVALUATE:
 call SOURCEsubID+0x0 
 call greatR+0x0 
 call TIB+0x0 
 call greatR+0x0 
 call nTIB+0x0 
 call Aload+0x0 
 call greatR+0x0 
 call greatIN+0x0 
 call Aload+0x0 
 call greatR+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 call SOURCEsubID+0x9 
 call nTIB+0x0 
 call save+0x0 
 call TIB+0x9 
 call greatIN+0x0 
 call _0save+0x0 
 call XLIT+0x0 
 .int INTERPRET+0x0 
 call CATCH+0x0 
 call Rgreat+0x0 
 call greatIN+0x0 
 call save+0x0 
 call Rgreat+0x0 
 call nTIB+0x0 
 call save+0x0 
 call Rgreat+0x0 
 call TIB+0x9 
 call Rgreat+0x0 
 call SOURCEsubID+0x9 
 call THROW+0x0 
 .byte 0xC3 
def("RESTORE-SOURCE",0xE ,0x0 ,SAVEsubSOURCE-0xB )
.globl RESTOREsubSOURCE
RESTOREsubSOURCE:
 call XLIT+0x0 
 .int 0x6 
 call lessgreat+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int RESTOREsubSOURCE+0x1E -.-4
 call ABORT+0x0 
 call CURSTR+0x0 
 call save+0x0 
 call SOURCEsave+0x0 
 call greatIN+0x0 
 call save+0x0 
 call SOURCEsubID+0x9 
 call SOURCEsubIDsubXT+0x9 
 .byte 0xC3 
def("SAVE-SOURCE",0xB ,0x0 ,FMAIN-0x5 )
.globl SAVEsubSOURCE
SAVEsubSOURCE:
 call SOURCEsubIDsubXT+0x0 
 call SOURCEsubID+0x0 
 call greatIN+0x0 
 call Aload+0x0 
 call SOURCE+0x0 
 call CURSTR+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x6 
 .byte 0xC3 
def("FMAIN",0x5 ,0x0 ,MAIN1-0x5 )
.globl FMAIN
FMAIN:
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 .byte 0xEB ,0xFE 
 call REFILL+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int FMAIN+0x1A -.-4
 call INTERPRET+0x0 
 .byte 0x90 
 call REFILL+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int FMAIN+0x32 -.-4
 call INTERPRET+0x0 
 .byte 0xEB ,0xE9 
 .byte 0xC3 
def("MAIN1",0x5 ,0x0 ,QUIT-0x4 )
.globl MAIN1
MAIN1:
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call REFILL+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MAIN1+0x1F -.-4
 call INTERPRET+0x0 
 call OKdot+0x0 
 .byte 0xEB ,0xE4 
 call BYE+0x0 
 .byte 0xC3 
def("QUIT",0x4 ,0x0 ,y-0x1 )
.globl QUIT
QUIT:
 call CONSOLEsubHANDLES+0x0 
 call XLIT+0x0 
 .int 0x0 
 call SOURCEsubID+0x9 
 call x+0x0 
 call lessMAINgreat+0x0 
 .byte 0xC3 
def("]",0x1 ,0x0 ,x-0x1 )
.globl y
y:
 call TRUE+0x0 
 call STATE+0x0 
 call save+0x0 
 .byte 0xC3 
def("[",0x1 ,0x1 ,OK1-0x3 )
.globl x
x:
 call STATE+0x0 
 call _0save+0x0 
 .byte 0xC3 
def("OK1",0x3 ,0x0 ,TYPE_BUFFadd-0xA )
.globl OK1
OK1:
 call STATE+0x0 
 call Aload+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int OK1+0x86 -.-4
 call _SLITERALsubCODE+0x0 
.byte 0x3 
.ascii " Ok\000"
 call TYPE+0x0 
 call DEPTH+0x0 
 call XLIT+0x0 
 .int 0x46 
 call UMIN+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0x48 
 .byte 0x8D ,0x6D ,0x10 
 .byte 0xBB 
 .int OK1+0x81 
 .byte 0x3B ,0x45 ,0xF0 
//jne OK1+0x58 
 .byte 0x75 ,0x5 
 .byte 0x8B ,0x45 ,0xF8 
 .byte 0xFF ,0xE3 
 .byte 0x53 
 .byte 0xBB 
 .int 0x80000000 
 .byte 0x2B ,0x5D ,0xF0 
 .byte 0x53 
 .byte 0x3 ,0xD8 
 .byte 0x53 
 .byte 0x48 
 .byte 0x8B ,0x45 ,0xF8 
 call XLIT+0x0 
 .int 0x2E 
 call EMIT+0x0 
 .byte 0xFF ,0x4 ,0x24 
//ÿèo OK1+0x69 
 .byte 0x71 ,0xED 
 .byte 0x48 
 .byte 0x8D ,0x64 ,0x24 ,0x18 
 call CR+0x0 
 .byte 0xC3 
def("TYPE_BUFF+",0xA ,0x0 ,TYPE_BUFF-0x9 )
.globl TYPE_BUFFadd
TYPE_BUFFadd:
 call TYPE_BUFF+0x0 
 call doladdsave+0x0 
 .byte 0xC3 
def("TYPE_BUFF",0x9 ,0x0 ,dotSN-0x3 )
.globl TYPE_BUFF
TYPE_BUFF:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 
def(".SN",0x3 ,0x0 ,INTERPRET-0x9 )
.globl dotSN
dotSN:
 call greatR+0x0 
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call Rload+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int dotSN+0xD2 -.-4
 call SPload+0x0 
 call Rload+0x0 
 call _1sub+0x0 
 call CELLS+0x0 
 call add+0x0 
 call load+0x0 
 call DUP+0x0 
 call _0less+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int dotSN+0xB9 -.-4
 call DUP+0x0 
 call UgreatD+0x0 
 call lessn+0x0 
 call nS+0x0 
 call ngreat+0x0 
 call TYPE+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x1 
.ascii "(\000"
 call TYPE+0x0 
 call ABS+0x0 
 call XLIT+0x0 
 .int 0x0 
 call lessn+0x0 
 call nS+0x0 
 call XLIT+0x0 
 .int 0x2D 
 call HOLD+0x0 
 call ngreat+0x0 
 call TYPE+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x2 
.ascii ") \000"
 call TYPE+0x0 
 .byte 0xE9
 .int dotSN+0xBE -.-4
 call dot+0x0 
 call Rgreat+0x0 
 call _1sub+0x0 
 call greatR+0x0 
 .byte 0xE9
 .int dotSN+0x8 -.-4
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 .byte 0xC3 
def("INTERPRET",0x9 ,0x0 ,andINTERPRET-0xA )
.globl INTERPRET
INTERPRET:
 call andINTERPRET+0x0 
 call load+0x0 
 call EXECUTE+0x0 
 .byte 0xC3 
def("&INTERPRET",0xA ,0x0 ,INTERPRET_-0xA )
.globl andINTERPRET
andINTERPRET:
 call _CREATEsubCODE+0x0 
 .int INTERPRET_+0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("INTERPRET_",0xA ,0x0 ,CHAR-0x4 )
.globl INTERPRET_
INTERPRET_:
 call SAVEERRque+0x0 
 call ON+0x0 
 call PARSEsubWORD+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INTERPRET_+0x73 -.-4
 call SFIND+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INTERPRET_+0x67 -.-4
 call DBG+0x0 
 call STATE+0x0 
 call load+0x0 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int INTERPRET_+0x5D -.-4
 call COMPILEcom+0x0 
 .byte 0xE9
 .int INTERPRET_+0x62 -.-4
 call EXECUTE+0x0 
 .byte 0xE9
 .int INTERPRET_+0x6C -.-4
 call queSLITERAL+0x0 
 call queSTACK+0x0 
 .byte 0xEB ,0x97 
 call _2DROP+0x0 
 .byte 0xC3 
def("CHAR",0x4 ,0x0 ,tic-0x1 )
.globl CHAR
CHAR:
 call PARSEsubWORD+0x0 
 call DROP+0x0 
 call Cload+0x0 
 .byte 0xC3 
def("'",0x1 ,0x0 ,WORD-0x4 )
.globl tic
tic:
 call PARSEsubWORD+0x0 
 call SFIND+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int tic+0x28 -.-4
 call XLIT+0x0 
 .int 0xFFFFFEBF 
 call THROW+0x0 
 .byte 0xC3 
def("WORD",0x4 ,0x0 ,queCOMP-0x5 )
.globl WORD
WORD:
 call DUP+0x0 
 call PSKIP+0x0 
 call PARSE+0x0 
 call DUP+0x0 
 call HERE+0x0 
 call XLIT+0x0 
 .int 0x220 
 call add+0x0 
 call Csave+0x0 
 call HERE+0x0 
 call XLIT+0x0 
 .int 0x221 
 call add+0x0 
 call SWAP+0x0 
 call CMOVE+0x0 
 call BL+0x0 
 call HERE+0x0 
 call XLIT+0x0 
 .int 0x220 
 call add+0x0 
 call COUNT+0x0 
 call add+0x0 
 call Lsave+0x0 
 call HERE+0x0 
 call XLIT+0x0 
 .int 0x220 
 call add+0x0 
 .byte 0xC3 
def("?COMP",0x5 ,0x0 ,queSTACK-0x6 )
.globl queCOMP
queCOMP:
 call STATE+0x0 
 call Aload+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queCOMP+0x28 -.-4
 call XLIT+0x0 
 .int 0xFFFFFEC8 
 call THROW+0x0 
 .byte 0xC3 
def("?STACK",0x6 ,0x0 ,DEPTH-0x5 )
.globl queSTACK
queSTACK:
 call SPload+0x0 
 call S0+0x0 
 call Aload+0x0 
 call SWAP+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queSTACK+0x41 -.-4
 call S0+0x0 
 call Aload+0x0 
 call SPsave+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFC 
 call THROW+0x0 
 .byte 0xC3 
def("DEPTH",0x5 ,0x0 ,PROCESSsubERR-0xB )
.globl DEPTH
DEPTH:
 call SPload+0x0 
 call S0+0x0 
 call Aload+0x0 
 call sub+0x0 
 call NEGATE+0x0 
 call XLIT+0x0 
 .int 0x8 
 call Ursl+0x0 
 .byte 0xC3 
def("PROCESS-ERR",0xB ,0x0 ,SOURCEsubIDsubXT-0xC )
.globl PROCESSsubERR
PROCESSsubERR:
 call _VECTsubCODE+0x0 
 .int NOOP+0x0 
 call _TOVALUEsubCODE+0x0 
def("SOURCE-ID-XT",0xC ,0x0 ,queSLITERAL-0x9 )
.globl SOURCEsubIDsubXT
SOURCEsubIDsubXT:
 call _USERsubVALUEsubCODE+0x0 
 .int reserve+0x10 
 call _TOUSERsubVALUEsubCODE+0x0 
def("?SLITERAL",0x9 ,0x0 ,queLITERAL-0x8 )
.globl queSLITERAL
queSLITERAL:
 call _VECTsubCODE+0x0 
 .int NOOP+0x0 
 call _TOVALUEsubCODE+0x0 
def("?LITERAL",0x8 ,0x0 ,lessMAINgreat-0x6 )
.globl queLITERAL
queLITERAL:
 call _VECTsubCODE+0x0 
 .int NOOP+0x0 
 call _TOVALUEsubCODE+0x0 
def("<MAIN>",0x6 ,0x0 ,OKdot-0x3 )
.globl lessMAINgreat
lessMAINgreat:
 call _VECTsubCODE+0x0 
 .int MAIN1+0x0 
 call _TOVALUEsubCODE+0x0 
def("OK.",0x3 ,0x0 ,ERROR_DO-0x8 )
.globl OKdot
OKdot:
 call _VECTsubCODE+0x0 
 .int OK1+0x0 
 call _TOVALUEsubCODE+0x0 
def("ERROR_DO",0x8 ,0x0 ,ERRsubTYPE-0x8 )
.globl ERROR_DO
ERROR_DO:
 call CR+0x0 
 call ERRFILE+0x0 
 call COUNT+0x0 
 call TYPE+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x1 
.ascii ":\000"
 call TYPE+0x0 
 call ERCURSTR+0x0 
 call load+0x0 
 call dot+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFE 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ERROR_DO+0x77 -.-4
 call DROP+0x0 
 call ERRsubTYPE+0x0 
 call ERsubA+0x0 
 call Aload+0x0 
 call ERsubU+0x0 
 call Aload+0x0 
 call TYPE+0x0 
 call CR+0x0 
 .byte 0xC3 
 call ERRsubTYPE+0x0 
 call DECIMAL+0x0 
 call x+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x7 
.ascii "SPF.ERR\000"
 call RrslO+0x0 
 call OPENsubFILE+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ERROR_DO+0xCC -.-4
 call DROP+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x7 
.ascii "ERROR #\000"
 call TYPE+0x0 
 call dot+0x0 
 call CR+0x0 
 .byte 0xC3 
 call SOURCEsubID+0x0 
 call greatR+0x0 
 call SOURCEsubID+0x9 
 call greatR+0x0 
 .byte 0x90 
 .byte 0x90 
 call REFILL+0x0 
 call _0equ+0x0 
 call nTIB+0x0 
 call Aload+0x0 
 call _0equ+0x0 
 call OR+0x0 
 call PARSEsubWORD+0x0 
 call XLIT+0x0 
 .int 0x80608E8 
 call CATCH+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int ERROR_DO+0x140 -.-4
 call _2DROP+0x0 
 call DROP+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 call Rload+0x0 
 call dot+0x0 
 .byte 0xE9
 .int ERROR_DO+0x14A -.-4
 call Rload+0x0 
 call equ+0x0 
 call OR+0x0 
 call QBRANCH+0x0 
//je  ERROR_DO+0xE2 
 .byte 0x74 ,0x8C 
 call greatIN+0x0 
 call _0save+0x0 
 call XLIT+0x0 
 .int 0x5C 
 call PARSE+0x0 
 call TYPE+0x0 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x8 
 call SOURCEsubID+0x0 
 call CLOSEsubFILE+0x0 
 call THROW+0x0 
 call Rgreat+0x0 
 call SOURCEsubID+0x9 
 call CR+0x0 
 .byte 0xC3 
def("ERR-TYPE",0x8 ,0x0 ,cABORT1dticcend-0x9 )
.globl ERRsubTYPE
ERRsubTYPE:
 call CR+0x0 
 call ERRTIB+0x0 
 call COUNT+0x0 
 call TYPE+0x0 
 call CR+0x0 
 call ERgreatIN+0x0 
 call load+0x0 
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call SPACE+0x0 
 call _1sub+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x0 
 call MAX+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
//je  ERRsubTYPE+0x26 
 .byte 0x74 ,0xD7 
 call _SLITERALsubCODE+0x0 
.byte 0x1 
.ascii "^\000"
 call TYPE+0x0 
 call DROP+0x0 
 .byte 0xC3 
def("(ABORT1\042)",0x9 ,0x0 ,queERROR-0x6 )
.globl cABORT1dticcend
cABORT1dticcend:
 call ROT+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int cABORT1dticcend+0x37 -.-4
 call ERsubU+0x0 
 call save+0x0 
 call ERsubA+0x0 
 call save+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFFE 
 call THROW+0x0 
 .byte 0xE9
 .int cABORT1dticcend+0x3C -.-4
 call _2DROP+0x0 
 .byte 0xC3 
def("?ERROR",0x6 ,0x0 ,_ERROR_DO-0x9 )
.globl queERROR
queERROR:
 call SWAP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queERROR+0x1A -.-4
 call THROW+0x0 
 .byte 0xE9
 .int queERROR+0x1F -.-4
 call DROP+0x0 
 .byte 0xC3 
def("_ERROR_DO",0x9 ,0x0 ,SAVEERR-0x7 )
.globl _ERROR_DO
_ERROR_DO:
 call SAVEERR+0x0 
 call CR+0x0 
 call ERRFILE+0x0 
 call COUNT+0x0 
 call TYPE+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x1 
.ascii ":\000"
 call TYPE+0x0 
 call ERCURSTR+0x0 
 call load+0x0 
 call dot+0x0 
 call CR+0x0 
 call ERRTIB+0x0 
 call COUNT+0x0 
 call TYPE+0x0 
 call CR+0x0 
 call ERgreatIN+0x0 
 call load+0x0 
 call SPACE+0x0 
 call _1sub+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x0 
 call MAX+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
//je  _ERROR_DO+0x58 
 .byte 0x74 ,0xD7 
 call _SLITERALsubCODE+0x0 
.byte 0x1 
.ascii "^\000"
 call TYPE+0x0 
 call DROP+0x0 
 call CR+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x4 
.ascii "ERR=\000"
 call TYPE+0x0 
 call dot+0x0 
 call CR+0x0 
 call S0+0x0 
 call Aload+0x0 
 call SPsave+0x0 
 call STATE+0x0 
 call _0save+0x0 
 .byte 0xC3 
def("SAVEERR",0x7 ,0x0 ,ERRFILE-0x7 )
.globl SAVEERR
SAVEERR:
 call DUP+0x0 
 call SAVEERRque+0x0 
 call load+0x0 
 call AND+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SAVEERR+0x51 -.-4
 call DBG+0x0 
 call SOURCE+0x0 
 call ERRTIB+0x0 
 call dolsave+0x0 
 call greatIN_WORD+0x0 
 call load+0x0 
 call ERgreatIN+0x0 
 call save+0x0 
 call SAVEERRque+0x0 
 call OFF+0x0 
 .byte 0xC3 
def("ERRFILE",0x7 ,0x0 ,ERRTIB-0x6 )
.globl ERRFILE
ERRFILE:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 
def("ERRTIB",0x6 ,0x0 ,cABORTdticcend-0x8 )
.globl ERRTIB
ERRTIB:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 
def("(ABORT\042)",0x8 ,0x0 ,ERROR-0x5 )
.globl cABORTdticcend
cABORTdticcend:
 call _VECTsubCODE+0x0 
 .int cABORT1dticcend+0x0 
 call _TOVALUEsubCODE+0x0 
def("ERROR",0x5 ,0x0 ,ERgreatIN-0x5 )
.globl ERROR
ERROR:
 call _VECTsubCODE+0x0 
 .int ERROR_DO+0x0 
 call _TOVALUEsubCODE+0x0 
def("ER>IN",0x5 ,0x0 ,ERCURSTR-0x8 )
.globl ERgreatIN
ERgreatIN:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("ERCURSTR",0x8 ,0x0 ,greatIN_WORD-0x8 )
.globl ERCURSTR
ERCURSTR:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def(">IN_WORD",0x8 ,0x0 ,SAVEERRque-0x8 )
.globl greatIN_WORD
greatIN_WORD:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("SAVEERR?",0x8 ,0x0 ,UNLOOP-0x6 )
.globl SAVEERRque
SAVEERRque:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("UNLOOP",0x6 ,0x1 ,LEAVE-0x5 )
.globl UNLOOP
UNLOOP:
 call queCOMP+0x0 
 call XLIT+0x0 
 .int 0x48 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x1824648D 
 call Lcom+0x0 
 .byte 0xC3 
def("LEAVE",0x5 ,0x1 ,addLOOP-0x5 )
.globl LEAVE
LEAVE:
 call queCOMP+0x0 
 call XLIT+0x0 
 .int 0x48 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x1024648D 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0xC3 
 call Ccom+0x0 
 .byte 0xC3 
def("+LOOP",0x5 ,0x1 ,_LOOP-0x5 )
.globl addLOOP
addLOOP:
 call queCOMP+0x0 
 call lessticgreat+0x0 
 call ADDxESPycomTOS+0x0 
 call _COMPILEcom+0x0 
 call HERE+0x0 
 call _2add+0x0 
 call sub+0x0 
 call DUP+0x0 
 call SHORTque+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int addLOOP+0x50 -.-4
 call XLIT+0x0 
 .int 0x71 
 call Ccom+0x0 
 call Ccom+0x0 
 .byte 0xE9
 .int addLOOP+0x7F -.-4
 call XLIT+0x0 
 .int 0x4 
 call sub+0x0 
 call XLIT+0x0 
 .int 0xF 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x81 
 call Ccom+0x0 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0x48 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x1824648D 
 call Lcom+0x0 
 call DP+0x0 
 call Aload+0x0 
 call SWAP+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("_LOOP",0x5 ,0x1 ,queDO-0x3 )
.globl _LOOP
_LOOP:
 call queCOMP+0x0 
 call XLIT+0x0 
 .int 0x24 
 call XLIT+0x0 
 .int 0x4FF 
 call Wcom+0x0 
 call Ccom+0x0 
 call HERE+0x0 
 call _2add+0x0 
 call sub+0x0 
 call DUP+0x0 
 call SHORTque+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int _LOOP+0x5D -.-4
 call XLIT+0x0 
 .int 0x71 
 call Ccom+0x0 
 call Ccom+0x0 
 .byte 0xE9
 .int _LOOP+0x8C -.-4
 call XLIT+0x0 
 .int 0x4 
 call sub+0x0 
 call XLIT+0x0 
 .int 0xF 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x81 
 call Ccom+0x0 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0x48 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x1824648D 
 call Lcom+0x0 
 call DP+0x0 
 call Aload+0x0 
 call SWAP+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("?DO",0x3 ,0x1 ,_DO-0x3 )
.globl queDO
queDO:
 call queCOMP+0x0 
 call XLIT+0x0 
 .int 0x48 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x8D 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x6D 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x10 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xBB 
 call Ccom+0x0 
 call HERE+0x0 
 call XLIT+0x0 
 .int 0x4 
 call ALLOT+0x0 
 call XLIT+0x0 
 .int 0x3B 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x45 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFF0 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x75 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x5 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x8B 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x45 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFF8 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xFF 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xE3 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x53 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xBB 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x80000000 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0x2B 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x5D 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFF0 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x53 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x3 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xD8 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x53 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x48 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x8B 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x45 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0xFFFFFFF8 
 call Ccom+0x0 
 call DP+0x0 
 call Aload+0x0 
 .byte 0xC3 
def("_DO",0x3 ,0x1 ,USER-0x4 )
.globl _DO
_DO:
 call lessticgreat+0x0 
 call XDO+0x0 
 call _COMPILEcom+0x0 
 call XLIT+0x0 
 .int 0x68 
 call Ccom+0x0 
 call DP+0x0 
 call Aload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call ALLOT+0x0 
 call XLIT+0x0 
 .int 0x52 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x53 
 call Ccom+0x0 
 call XLIT+0x0 
 .int 0x4 
 call ALIGNsubNOP+0x0 
 call DP+0x0 
 call Aload+0x0 
 .byte 0xC3 
def("USER",0x4 ,0x0 ,USERsubCREATE-0xB )
.globl USER
USER:
 call USERsubCREATE+0x0 
 call XLIT+0x0 
 .int 0x8 
 call USERsubALLOT+0x0 
 .byte 0xC3 
def("USER-CREATE",0xB ,0x0 ,USERsubALIGNED-0xC )
.globl USERsubCREATE
USERsubCREATE:
 call HEADER+0x0 
 call HERE+0x0 
 call DOESgreatA+0x0 
 call save+0x0 
 call USERsubCODE+0x0 
 call COMPILEcom+0x0 
 call USERsubALIGNED+0x0 
 call USERsubALLOT+0x0 
 call Lcom+0x0 
 .byte 0xC3 
def("USER-ALIGNED",0xC ,0x0 ,USERsubHERE-0x9 )
.globl USERsubALIGNED
USERsubALIGNED:
 call USERsubHERE+0x0 
 call XLIT+0x0 
 .int 0x3 
 call add+0x0 
 call XLIT+0x0 
 .int 0x2 
 call RSHIFT+0x0 
 call XLIT+0x0 
 .int 0x4 
 call mul+0x0 
 call DUP+0x0 
 call USERsubHERE+0x0 
 call sub+0x0 
 .byte 0xC3 
def("USER-HERE",0x9 ,0x0 ,USERsubALLOT-0xA )
.globl USERsubHERE
USERsubHERE:
 call USERsubOFFS+0x0 
 call load+0x0 
 .byte 0xC3 
def("USER-ALLOT",0xA ,0x0 ,VOCABULARY-0xA )
.globl USERsubALLOT
USERsubALLOT:
 call USERsubOFFS+0x0 
 call addsave+0x0 
 .byte 0xC3 
def("VOCABULARY",0xA ,0x0 ,dcoma-0x1 )
.globl VOCABULARY
VOCABULARY:
 call WORDLIST+0x0 
 call DUP+0x0 
 call CREATE+0x0 
 call Lcom+0x0 
 call LATEST+0x0 
 call OVER+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call Lsave+0x0 
 call GETsubCURRENT+0x0 
 call SWAP+0x0 
 call PARsave+0x0 
 call VOC+0x0 
 call cDOES1cend+0x0 
 call Rgreat+0x0 
 call load+0x0 
 call CONTEXT+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def(":",0x1 ,0x0 ,subgreatVARIABLE-0xA )
.globl dcoma
dcoma:
 call HEADER+0x0 
 call y+0x0 
 call HIDE+0x0 
 .byte 0xC3 
def("->VARIABLE",0xA ,0x0 ,VECT-0x4 )
.globl subgreatVARIABLE
subgreatVARIABLE:
 call HEADER+0x0 
 call CREATEsubCODE+0x0 
 call COMPILEcom+0x0 
 call Lcom+0x0 
 .byte 0xC3 
def("VECT",0x4 ,0x0 ,VALUE-0x5 )
.globl VECT
VECT:
 call HEADER+0x0 
 call VECTsubCODE+0x0 
 call COMPILEcom+0x0 
 call XLIT+0x0 
 .int 0x8062EAF 
 call Lcom+0x0 
 call TOVALUEsubCODE+0x0 
 call COMPILEcom+0x0 
 .byte 0xC3 
def("VALUE",0x5 ,0x0 ,VARIABLE-0x8 )
.globl VALUE
VALUE:
 call HEADER+0x0 
 call QVALUEsubCODE+0x0 
 call COMPILEcom+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 call QTOVALUEsubCODE+0x0 
 call COMPILEcom+0x0 
 call Qcom+0x0 
 .byte 0xC3 
def("VARIABLE",0x8 ,0x0 ,cDOES1cend-0x7 )
.globl VARIABLE
VARIABLE:
 call CREATE+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 .byte 0xC3 
def("(DOES1)",0x7 ,0x0 ,DOESgreat-0x5 )
.globl cDOES1cend
cDOES1cend:
 call Rgreat+0x0 
 call DOESgreatA+0x0 
 call Aload+0x0 
 call CFL+0x0 
 call add+0x0 
 call sub+0x0 
 call DOESgreatA+0x0 
 call Aload+0x0 
 call _1add+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("DOES>",0x5 ,0x1 ,CREATE-0x6 )
.globl DOESgreat
DOESgreat:
 call lessticgreat+0x0 
 call cDOES1cend+0x0 
 call COMPILEcom+0x0 
 call lessticgreat+0x0 
 call Rgreat+0x0 
 call COMPILEcom+0x0 
 .byte 0xC3 
def("CREATE",0x6 ,0x0 ,CREATED-0x7 )
.globl CREATE
CREATE:
 call PARSEsubWORD+0x0 
 call CREATED+0x0 
 .byte 0xC3 
def("CREATED",0x7 ,0x0 ,HEADER-0x6 )
.globl CREATED
CREATED:
 call SHEADER+0x0 
 call HERE+0x0 
 call DOESgreatA+0x0 
 call save+0x0 
 call CREATEsubCODE+0x0 
 call COMPILEcom+0x0 
 .byte 0xC3 
def("HEADER",0x6 ,0x0 ,YSHEADER-0x8 )
.globl HEADER
HEADER:
 call PARSEsubWORD+0x0 
 call SHEADER+0x0 
 .byte 0xC3 
def("YSHEADER",0x8 ,0x0 ,queYDPgreatlessDP-0x8 )
.globl YSHEADER
YSHEADER:
 call queYDPgreatlessDP+0x0 
 call HERE+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 call DUP+0x0 
 call LASTsubCFA+0x0 
 call save+0x0 
 call XLIT+0x0 
 .int 0x0 
 call Lcom+0x0 
 call subROT+0x0 
 call WARNING+0x0 
 call load+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int YSHEADER+0x96 -.-4
 call _2DUP+0x0 
 call GETsubCURRENT+0x0 
 call SEARCHsubWORDLIST+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int YSHEADER+0x96 -.-4
 call DROP+0x0 
 call _2DUP+0x0 
 call TYPE+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0xD 
.ascii " isn't unique\000"
 call TYPE+0x0 
 call CR+0x0 
 call CURRENT+0x0 
 call load+0x0 
 call addSWORD+0x0 
 call queYDPgreatlessDP+0x0 
 call ALIGN+0x0 
 call HERE+0x0 
 call SWAP+0x0 
 call Lsave+0x0 
 .byte 0xC3 
def("?YDP><DP",0x8 ,0x0 ,YDPgreatlessDP-0x7 )
.globl queYDPgreatlessDP
queYDPgreatlessDP:
 call YDP_FL+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int queYDPgreatlessDP+0x38 -.-4
 call YDP+0x0 
 call load+0x0 
 call DP+0x0 
 call load+0x0 
 call YDP+0x0 
 call save+0x0 
 call DP+0x0 
 call save+0x0 
 .byte 0xC3 
def("YDP><DP",0x7 ,0x0 ,YDP_FL-0x6 )
.globl YDPgreatlessDP
YDPgreatlessDP:
 call YDP+0x0 
 call load+0x0 
 call DP+0x0 
 call load+0x0 
 call YDP+0x0 
 call save+0x0 
 call DP+0x0 
 call save+0x0 
 .byte 0xC3 
def("YDP_FL",0x6 ,0x0 ,YDP0-0x4 )
.globl YDP_FL
YDP_FL:
 call _QVALUEsubCODE+0x0 
 .int 0x0 
 call _QTOVALUEsubCODE+0x0 
 .int 0x0 
 .int 0x0 
def("YDP0",0x4 ,0x0 ,YDP-0x3 )
.globl YDP0
YDP0:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("YDP",0x3 ,0x0 ,LASTsubNON-0x8 )
.globl YDP
YDP:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("LAST-NON",0x8 ,0x0 ,LASTsubCFA-0x8 )
.globl LASTsubNON
LASTsubNON:
 call _USERsubVALUEsubCODE+0x0 
 .int reserve+0x8 
 call _TOUSERsubVALUEsubCODE+0x0 
def("LAST-CFA",0x8 ,0x0 ,ABORTdtic-0x6 )
.globl LASTsubCFA
LASTsubCFA:
 call _USERsubCODE+0x0 
 .int reserve+0x0 
def("ABORT\042",0x6 ,0x1 ,xCHARy-0x6 )
.globl ABORTdtic
ABORTdtic:
 call queCOMP+0x0 
 call queCOMP+0x0 
 call Sdtic+0x0 
 call ticcABORTdticcend+0x0 
 call COMPILEcom+0x0 
 .byte 0xC3 
def("[CHAR]",0x6 ,0x1 ,dotdtic-0x2 )
.globl xCHARy
xCHARy:
 call queCOMP+0x0 
 call PARSEsubWORD+0x0 
 call DROP+0x0 
 call Cload+0x0 
 call LITERAL+0x0 
 .byte 0xC3 
def(".\042",0x2 ,0x1 ,Cdtic-0x2 )
.globl dotdtic
dotdtic:
 call queCOMP+0x0 
 call Sdtic+0x0 
 call ticTYPE+0x0 
 call COMPILEcom+0x0 
 .byte 0xC3 
def("C\042",0x2 ,0x1 ,Sdtic-0x2 )
.globl Cdtic
Cdtic:
 call XLIT+0x0 
 .int 0x22 
 call WORD+0x0 
 call CLITERAL+0x0 
 .byte 0xC3 
def("S\042",0x2 ,0x1 ,CLITERAL-0x8 )
.globl Sdtic
Sdtic:
 call XLIT+0x0 
 .int 0x22 
 call PARSE+0x0 
 call SLITERAL+0x0 
 .byte 0xC3 
def("CLITERAL",0x8 ,0x1 ,SLITERAL-0x8 )
.globl CLITERAL
CLITERAL:
 call STATE+0x0 
 call Aload+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int CLITERAL+0x1A -.-4
 call CLITcom+0x0 
 .byte 0xC3 
def("SLITERAL",0x8 ,0x1 ,_2LITERAL-0x8 )
.globl SLITERAL
SLITERAL:
 call STATE+0x0 
 call Aload+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SLITERAL+0x1F -.-4
 call SLITcom+0x0 
 .byte 0xE9
 .int SLITERAL+0x3C -.-4
 call _2DUP+0x0 
 call add+0x0 
 call XLIT+0x0 
 .int 0x0 
 call SWAP+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("2LITERAL",0x8 ,0x1 ,LITERAL-0x7 )
.globl _2LITERAL
_2LITERAL:
 call STATE+0x0 
 call Aload+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int _2LITERAL+0x1A -.-4
 call DLITcom+0x0 
 .byte 0xC3 
def("LITERAL",0x7 ,0x1 ,xticy-0x3 )
.globl LITERAL
LITERAL:
 call STATE+0x0 
 call Aload+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int LITERAL+0x1A -.-4
 call LITcom+0x0 
 .byte 0xC3 
def("[']",0x3 ,0x1 ,RrslW-0x3 )
.globl xticy
xticy:
 call queCOMP+0x0 
 call tic+0x0 
 call LITcom+0x0 
 .byte 0xC3 
def("R/W",0x3 ,0x0 ,WrslO-0x3 )
.globl RrslW
RrslW:
 call DUP+0x0 
 call RWGet+0x0 
 .byte 0xC3 
def("W/O",0x3 ,0x0 ,RrslO-0x3 )
.globl WrslO
WrslO:
 call DUP+0x0 
 call WOGet+0x0 
 .byte 0xC3 
def("R/O",0x3 ,0x0 ,NOTFOUND-0x8 )
.globl RrslO
RrslO:
 call DUP+0x0 
 call ROGet+0x0 
 .byte 0xC3 
def("NOTFOUND",0x8 ,0x0 ,FLITERAL-0x8 )
.globl NOTFOUND
NOTFOUND:
 call _2DUP+0x0 
 call _2greatR+0x0 
 call lessticgreat+0x0 
 call queSLITERAL+0x0 
 call CATCH+0x0 
 call queDUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int NOTFOUND+0x61 -.-4
 call NIP+0x0 
 call NIP+0x0 
 call _2Rgreat+0x0 
 call greatFLOAT+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int NOTFOUND+0x57 -.-4
 call FLITERAL+0x0 
 call DROP+0x0 
 .byte 0xE9
 .int NOTFOUND+0x5C -.-4
 call THROW+0x0 
 .byte 0xE9
 .int NOTFOUND+0x6B -.-4
 call _2Rgreat+0x0 
 call _2DROP+0x0 
 .byte 0xC3 
def("FLITERAL",0x8 ,0x1 ,FLITcom-0x5 )
.globl FLITERAL
FLITERAL:
 call STATE+0x0 
 call Aload+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int FLITERAL+0x1A -.-4
 call FLITcom+0x0 
 .byte 0xC3 
def("FLIT\054",0x5 ,0x0 ,Fcom-0x2 )
.globl FLITcom
FLITcom:
 call XLIT+0x0 
 .int FLIT+0x0 
 call COMPILEcom+0x0 
 call Fcom+0x0 
 .byte 0xC3 
def("F\054",0x2 ,0x0 ,FLIT-0x4 )
.globl Fcom
Fcom:
 call HERE+0x0 
 call Fsave+0x0 
 call FCELL+0x0 
 call load+0x0 
 call ALLOT+0x0 
 .byte 0xC3 
def("FLIT",0x4 ,0x0 ,greatFLOAT-0x6 )
.globl FLIT
FLIT:
 call Rgreat+0x0 
 call DUP+0x0 
 call Fload+0x0 
 call FCELL+0x0 
 call load+0x0 
 call add+0x0 
 call greatR+0x0 
 .byte 0xC3 
def(">FLOAT",0x6 ,0x0 ,ZFLOAT-0x6 )
.globl greatFLOAT
greatFLOAT:
 call _2DUP+0x0 
 call add+0x0 
 call _1sub+0x0 
 call Cload+0x0 
 call XLIT+0x0 
 .int 0x20 
 call OR+0x0 
 call XLIT+0x0 
 .int 0x65 
 call equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int greatFLOAT+0x40 -.-4
 call _1sub+0x0 
 call ZFLOAT+0x0 
 call ASCIIsubZ+0x0 
 call ZTOFLOAT+0x0 
 .byte 0xC3 
def("ZFLOAT",0x6 ,0x0 ,FCELL-0x5 )
.globl ZFLOAT
ZFLOAT:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 
def("FCELL",0x5 ,0x0 ,Fless-0x2 )
.globl FCELL
FCELL:
 call DUP+0x0 
 call FCELL_+0x0 
 .byte 0xC3 
def("F<",0x2 ,0x0 ,F0equ-0x3 )
.globl Fless
Fless:
 call DUP+0x0 
 call f_less_than+0x0 
 .byte 0xC3 
def("F0=",0x3 ,0x0 ,F0less-0x3 )
.globl F0equ
F0equ:
 call DUP+0x0 
 call f_zero_equal+0x0 
 .byte 0xC3 
def("F0<",0x3 ,0x0 ,Fdot-0x2 )
.globl F0less
F0less:
 call DUP+0x0 
 call f_zero_less+0x0 
 .byte 0xC3 
def("F.",0x2 ,0x0 ,CHARS-0x5 )
.globl Fdot
Fdot:
 call PFdot+0x0 
 call ZTYPE+0x0 
 .byte 0xC3 
def("CHARS",0x5 ,0x0 ,com-0x1 )
.globl CHARS
CHARS:
 .byte 0xC3 
def("\054",0x1 ,0x0 ,lessticgreat-0x3 )
.globl com
com:
 call HERE+0x0 
 call save+0x0 
 call CELL+0x0 
 call ALLOT+0x0 
 .byte 0xC3 
def("<'>",0x3 ,0x0 ,RELload-0x4 )
.globl lessticgreat
lessticgreat:
 call Rgreat+0x0 
 call _1add+0x0 
 call DUP+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 call greatR+0x0 
 call RELload+0x0 
 call XLIT+0x0 
 .int 0x4 
 call add+0x0 
 .byte 0xC3 
def("REL@",0x4 ,0x0 ,SHORTque-0x6 )
.globl RELload
RELload:
 call DUP+0x0 
 call Lload+0x0 
 call add+0x0 
 .byte 0xC3 
def("SHORT?",0x6 ,0x0 ,ASCIIsubZ-0x7 )
.globl SHORTque
SHORTque:
 call XLIT+0x0 
 .int 0x80 
 call add+0x0 
 call XLIT+0x0 
 .int 0x100 
 call Uless+0x0 
 .byte 0xC3 
def("ASCII-Z",0x7 ,0x0 ,doladdsave-0x3 )
.globl ASCIIsubZ
ASCIIsubZ:
 call DUP+0x0 
 call greatR+0x0 
 call dolsave+0x0 
 call Rgreat+0x0 
 call COUNT+0x0 
 call OVER+0x0 
 call add+0x0 
 call XLIT+0x0 
 .int 0x0 
 call SWAP+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("$+!",0x3 ,0x0 ,dolsave-0x2 )
.globl doladdsave
doladdsave:
 call addPLACE+0x0 
 .byte 0xC3 
def("$!",0x2 ,0x0 ,TOUSERsubVALUEsubCODE-0x11 )
.globl dolsave
dolsave:
 call PLACE+0x0 
 .byte 0xC3 
def("TOUSER-VALUE-CODE",0x11 ,0x0 ,USERsubVALUEsubCODE-0xF )
.globl TOUSERsubVALUEsubCODE
TOUSERsubVALUEsubCODE:
 call _QVALUEsubCODE+0x0 
 .int 0x0 
 call _QTOVALUEsubCODE+0x0 
 .int 0x804B433 
 .int 0x0 
def("USER-VALUE-CODE",0xF ,0x0 ,DOESsubCODE-0x9 )
.globl USERsubVALUEsubCODE
USERsubVALUEsubCODE:
 call _QVALUEsubCODE+0x0 
 .int 0x0 
 call _QTOVALUEsubCODE+0x0 
 .int 0x804B499 
 .int 0x0 
def("DOES-CODE",0x9 ,0x0 ,CaddPLACE-0x7 )
.globl DOESsubCODE
DOESsubCODE:
 call _QVALUEsubCODE+0x0 
 .int 0x0 
 call _QTOVALUEsubCODE+0x0 
 .int 0x0 
 .int 0x0 
def("C+PLACE",0x7 ,0x0 ,addPLACE-0x6 )
.globl CaddPLACE
CaddPLACE:
 call DUP+0x0 
 call _1addsave+0x0 
 call COUNT+0x0 
 call add+0x0 
 call _1sub+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("+PLACE",0x6 ,0x0 ,PLACE-0x5 )
.globl addPLACE
addPLACE:
 call greatR+0x0 
 call dticCLIPdtic+0x0 
 call MAXCOUNTED+0x0 
 call Rload+0x0 
 call Cload+0x0 
 call sub+0x0 
 call MIN+0x0 
 call Rgreat+0x0 
 call _2DUP+0x0 
 call _2greatR+0x0 
 call COUNT+0x0 
 call add+0x0 
 call SWAP+0x0 
 call MOVE+0x0 
 call _2Rgreat+0x0 
 call addsave+0x0 
 .byte 0xC3 
def("PLACE",0x5 ,0x0 ,dticCLIPdtic-0x6 )
.globl PLACE
PLACE:
 call SWAP+0x0 
 call dticCLIPdtic+0x0 
 call SWAP+0x0 
 call _2DUP+0x0 
 call _2greatR+0x0 
 call CHARadd+0x0 
 call SWAP+0x0 
 call MOVE+0x0 
 call _2Rgreat+0x0 
 call Csave+0x0 
 .byte 0xC3 
def("\042CLIP\042",0x6 ,0x0 ,MAXCOUNTED-0xA )
.globl dticCLIPdtic
dticCLIPdtic:
 call MAXCOUNTED+0x0 
 call MIN+0x0 
 call XLIT+0x0 
 .int 0x0 
 call MAX+0x0 
 .byte 0xC3 
def("MAXCOUNTED",0xA ,0x0 ,MOVE-0x4 )
.globl MAXCOUNTED
MAXCOUNTED:
 call _CONSTANTsubCODE+0x0 
 .int 0xFF 
def("MOVE",0x4 ,0x0 ,ON-0x2 )
.globl MOVE
MOVE:
 call greatR+0x0 
 call _2DUP+0x0 
 call SWAP+0x0 
 call Rload+0x0 
 call add+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MOVE+0x5C -.-4
 call _2DUP+0x0 
 call Uless+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int MOVE+0x4D -.-4
 call Rgreat+0x0 
 call CMOVEgreat+0x0 
 .byte 0xE9
 .int MOVE+0x57 -.-4
 call Rgreat+0x0 
 call CMOVE+0x0 
 .byte 0xE9
 .int MOVE+0x66 -.-4
 call Rgreat+0x0 
 call CMOVE+0x0 
 .byte 0xC3 
def("ON",0x2 ,0x0 ,OFF-0x3 )
.globl ON
ON:
 call XLIT+0x0 
 .int 0xFFFFFFFF 
 call SWAP+0x0 
 call save+0x0 
 .byte 0xC3 
def("OFF",0x3 ,0x0 ,xSEARCH-0x7 )
.globl OFF
OFF:
 call XLIT+0x0 
 .int 0x0 
 call SWAP+0x0 
 call save+0x0 
 .byte 0xC3 
def("xSEARCH",0x7 ,0x0 ,xCOMPARE-0x8 )
.globl xSEARCH
xSEARCH:
 call _2greatR+0x0 
 call _2DUP+0x0 
 call DUP+0x0 
 call _1add+0x0 
 call Rload+0x0 
 call great+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xSEARCH+0x77 -.-4
 call OVER+0x0 
 call _2Rload+0x0 
 call TUCK+0x0 
 call xCOMPARE+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xSEARCH+0x61 -.-4
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x10 
 call _2SWAP+0x0 
 call _2DROP+0x0 
 call TRUE+0x0 
 .byte 0xC3 
 call _1sub+0x0 
 call SWAP+0x0 
 call _1add+0x0 
 call SWAP+0x0 
 .byte 0xEB ,0x93 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x10 
 call _2DROP+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
def("xCOMPARE",0x8 ,0x0 ,SEARCH-0x6 )
.globl xCOMPARE
xCOMPARE:
 call ROT+0x0 
 call _2DUP+0x0 
 call sub+0x0 
 call greatR+0x0 
 call MIN+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xCOMPARE+0xA9 -.-4
 call greatR+0x0 
 call OVER+0x0 
 call Cload+0x0 
 call OVER+0x0 
 call Cload+0x0 
 call sub+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xCOMPARE+0x70 -.-4
 call SWAP+0x0 
 call Cload+0x0 
 call SWAP+0x0 
 call Cload+0x0 
 call sub+0x0 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x10 
 .byte 0xC3 
 call _1add+0x0 
 call SWAP+0x0 
 call _1add+0x0 
 call SWAP+0x0 
 call Rgreat+0x0 
 call _1sub+0x0 
 call DUP+0x0 
 call greatR+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
//je  xCOMPARE+0x2E 
 .byte 0x74 ,0x8A 
 call Rgreat+0x0 
 call DROP+0x0 
 call DROP+0x0 
 call DROP+0x0 
 call Rgreat+0x0 
 call NEGATE+0x0 
 .byte 0xC3 
def("SEARCH",0x6 ,0x0 ,COMPARE-0x7 )
.globl SEARCH
SEARCH:
 call _2greatR+0x0 
 call _2DUP+0x0 
 .byte 0x90 
 call DUP+0x0 
 call _1add+0x0 
 call Rload+0x0 
 call great+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SEARCH+0x78 -.-4
 call OVER+0x0 
 call _2Rload+0x0 
 call TUCK+0x0 
 call COMPARE+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int SEARCH+0x62 -.-4
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x10 
 call _2SWAP+0x0 
 call _2DROP+0x0 
 call TRUE+0x0 
 .byte 0xC3 
 call _1sub+0x0 
 call SWAP+0x0 
 call _1add+0x0 
 call SWAP+0x0 
 .byte 0xEB ,0x93 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x10 
 call _2DROP+0x0 
 call XLIT+0x0 
 .int 0x0 
 .byte 0xC3 
def("COMPARE",0x7 ,0x0 ,AASAVE0-0x7 )
.globl COMPARE
COMPARE:
 call ROT+0x0 
 call _2DUP+0x0 
 call sub+0x0 
 call greatR+0x0 
 call MIN+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int COMPARE+0xAC -.-4
 call greatR+0x0 
 .byte 0x90 
 .byte 0x90 
 .byte 0x90 
 call OVER+0x0 
 call Cload+0x0 
 call OVER+0x0 
 call Cload+0x0 
 call sub+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int COMPARE+0x73 -.-4
 call SWAP+0x0 
 call Cload+0x0 
 call SWAP+0x0 
 call Cload+0x0 
 call sub+0x0 
 .byte 0x48 
 .byte 0x83 ,0xC4 ,0x10 
 .byte 0xC3 
 call _1add+0x0 
 call SWAP+0x0 
 call _1add+0x0 
 call SWAP+0x0 
 call Rgreat+0x0 
 call _1sub+0x0 
 call DUP+0x0 
 call greatR+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
//je  COMPARE+0x31 
 .byte 0x74 ,0x8A 
 call Rgreat+0x0 
 call DROP+0x0 
 call DROP+0x0 
 call DROP+0x0 
 call Rgreat+0x0 
 call NEGATE+0x0 
 .byte 0xC3 
def("AASAVE0",0x7 ,0x0 ,AASAVE-0x6 )
.globl AASAVE0
AASAVE0:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("AASAVE",0x6 ,0x0 ,BLANK-0x5 )
.globl AASAVE
AASAVE:
 call _CREATEsubCODE+0x0 
 .int 0x0 
 .byte 0x0 ,0x0 ,0x0 ,0x0 
def("BLANK",0x5 ,0x0 ,ERASE-0x5 )
.globl BLANK
BLANK:
 call BL+0x0 
 call FILL+0x0 
 .byte 0xC3 
def("ERASE",0x5 ,0x0 ,_0MAX-0x4 )
.globl ERASE
ERASE:
 call XLIT+0x0 
 .int 0x0 
 call FILL+0x0 
 .byte 0xC3 
def("0MAX",0x4 ,0x0 ,DABS-0x4 )
.globl _0MAX
_0MAX:
 call XLIT+0x0 
 .int 0x0 
 call MAX+0x0 
 .byte 0xC3 
def("DABS",0x4 ,0x0 ,DBG1-0x4 )
.globl DABS
DABS:
 call DUP+0x0 
 call _0less+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int DABS+0x1A -.-4
 call DNEGATE+0x0 
 .byte 0xC3 
def("DBG1",0x4 ,0x0 ,DBG-0x3 )
.globl DBG1
DBG1:
 .byte 0xC3 
def("DBG",0x3 ,0x0 ,FALSE-0x5 )
.globl DBG
DBG:
 .byte 0xC3 
def("FALSE",0x5 ,0x0 ,TRUE-0x4 )
.globl FALSE
FALSE:
 call _CONSTANTsubCODE+0x0 
 .int 0x0 
def("TRUE",0x4 ,0x0 ,CELL-0x4 )
.globl TRUE
TRUE:
 call _CONSTANTsubCODE+0x0 
 .int 0xFFFFFFFF 
def("CELL",0x4 ,0x0 ,xTHENy-0x6 )
.globl CELL
CELL:
 call _CONSTANTsubCODE+0x0 
 .int 0x8 
def("[THEN]",0x6 ,0x1 ,xIFy-0x4 )
.globl xTHENy
xTHENy:
 .byte 0xC3 
def("[IF]",0x4 ,0x1 ,xELSEy-0x6 )
.globl xIFy
xIFy:
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xIFy+0x15 -.-4
 call xELSEy+0x0 
 .byte 0xC3 
def("[ELSE]",0x6 ,0x1 ,V_UPPER-0x7 )
.globl xELSEy
xELSEy:
 call XLIT+0x0 
 .int 0x1 
 call PARSEsubNAME+0x0 
 call _2DUP+0x0 
 call V_UPPER+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xELSEy+0xE0 -.-4
 call _2DUP+0x0 
 call XLIT+0x0 
 .int 0x3 
 call UMIN+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x3 
.ascii "[IF\000"
 call COMPARE+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xELSEy+0x69 -.-4
 call _2DROP+0x0 
 call _1add+0x0 
 .byte 0xE9
 .int xELSEy+0xDB -.-4
 call _2DUP+0x0 
 call _SLITERALsubCODE+0x0 
.byte 0x6 
.ascii "[ELSE]\000"
 call COMPARE+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xELSEy+0xB4 -.-4
 call _2DROP+0x0 
 call _1sub+0x0 
 call DUP+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xELSEy+0xAF -.-4
 call _1add+0x0 
 .byte 0xE9
 .int xELSEy+0xDB -.-4
 call _SLITERALsubCODE+0x0 
.byte 0x6 
.ascii "[THEN]\000"
 call COMPARE+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xELSEy+0xDB -.-4
 call _1sub+0x0 
 .byte 0xE9
 .int xELSEy+0xEF -.-4
 call _2DROP+0x0 
 call REFILL+0x0 
 call AND+0x0 
 call DUP+0x0 
 call _0equ+0x0 
 call QBRANCH+0x0 
 .word 0x840F 
 .int xELSEy+0x9 -.-4
 call DROP+0x0 
 .byte 0xC3 
def("V_UPPER",0x7 ,0x0 ,TT-0x2 )
.globl V_UPPER
V_UPPER:
 call _VECTsubCODE+0x0 
 .int _2DROP+0x0 
 call _TOVALUEsubCODE+0x0 
